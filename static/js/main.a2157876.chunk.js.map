{"version":3,"sources":["front-end/services/authentication/Proveedor.js","front-end/components/authentication/utils/GradientBackground/gradient-background.style.js","front-end/components/authentication/utils/GradientBackground/gradient-background.component.js","front-end/utils/styledComponents.js","front-end/components/authentication/utils/panel/panel.style.js","front-end/components/authentication/utils/panel/panel.component.js","front-end/components/authentication/login/login.style.js","front-end/components/authentication/utils/CenterContainer/center-container.style.js","front-end/components/authentication/utils/CenterContainer/center-container.component.js","front-end/components/authentication/login/Login.jsx","front-end/components/authentication/children/ProviderItem/provider.item.component.js","front-end/components/authentication/register/register.style.js","front-end/components/authentication/register/RegisterComponente.jsx","front-end/components/authentication/register/RegistroContainer.jsx","front-end/components/authentication/login/HomeLogin.jsx","front-end/components/Home.jsx","front-end/components/map/MarkerIcons.js","front-end/components/map/MapRuta.jsx","front-end/model/Comentario.js","front-end/components/share/CommentBox.jsx","front-end/components/share/PhotoGallery.jsx","front-end/components/ruta/VerRutas/RouteCard.jsx","front-end/components/share/GroupSelect.jsx","front-end/components/share/SharePanel.jsx","front-end/components/ruta/VerRutas/RouteList.jsx","front-end/components/util/Loaders/PacmanViewLoader.jsx","front-end/model/Hito.js","front-end/model/Ruta.js","BackEnd/Scripts/addRoute.js","BackEnd/Scripts/helpers/fileHelper.js","front-end/model/Persona.js","BackEnd/Scripts/helpers/personHelper.js","BackEnd/Scripts/helpers/routeHelper.js","BackEnd/Scripts/listRoutes.js","BackEnd/Scripts/helpers/notificationHelper.js","BackEnd/Scripts/deleteRoute.js","BackEnd/Scripts/listFriends.js","BackEnd/Scripts/addFriend.js","BackEnd/Scripts/addToMySharedRoutes.js","BackEnd/Scripts/shareRoute.js","BackEnd/Scripts/addSharedRoute.js","BackEnd/Scripts/deleteFromfriendSharedRoutes.js","front-end/model/Notificacion.js","BackEnd/Scripts/processSharedRoutes.js","front-end/model/RutaAmigo.js","BackEnd/Scripts/listSharedRoutes.js","BackEnd/Scripts/addCommentToRoute.js","BackEnd/Scripts/listCommentsOfRoute.js","BackEnd/Scripts/addMediaToRoute.js","BackEnd/Scripts/listMediaOfRoute.js","BackEnd/Scripts/validAppPermissions.js","BackEnd/BackMain.js","front-end/services/rutas/RutaService.js","front-end/services/amigos/AmigoService.js","front-end/components/ruta/VerRutas/VerRutas.jsx","front-end/components/fragments/Footer.jsx","front-end/components/NavBar/nav-bar.component.jsx","front-end/layouts/NotLoggedInLayout/not-logged-in.layout.jsx","front-end/components/AuthNavBar/auth-nav-bar.component.jsx","front-end/layouts/PrivateLayout/private.layout.jsx","front-end/layouts/PublicLayout/public.layout.jsx","front-end/components/friends/AddFriend.jsx","front-end/components/friends/FriendList.jsx","front-end/components/util/MessageDialog.jsx","front-end/components/friends/Friends.jsx","front-end/components/util/Loaders/HashViewLoader.jsx","front-end/components/share/SharedWithMe.jsx","front-end/components/share/ShareView.jsx","front-end/components/map/MapPointModal.jsx","front-end/components/map/AddRouteMap.jsx","front-end/components/ruta/AñadirRuta/AddRutaMap.jsx","front-end/components/ruta/AñadirRuta/AddMapView.jsx","front-end/components/ruta/AñadirRuta/AddMenu.jsx","front-end/components/ruta/AñadirRuta/AddRuta.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Provider","id","label","image","process","value","registerLink","description","Gradient","styled","div","GradientBackground","children","className","sizes","desktop","desktopSm","tablet","phone","media","Object","keys","reduce","acc","css","PanelWrapper","Panel","LoginWrapper","LoginPanel","PanelBody","span","CenterContainerWrapper","section","CenterContainer","LogInComponent","data-testid","callbackUri","window","location","protocol","host","selectPlaceHolder","inputPlaceholder","formButtonText","btnTxtWebId","btnTxtProvider","errorsText","unknown","webIdNotValid","emptyProvider","emptyWebId","providers","getIdentityProviders","ProviderItem","data","onSelect","radioName","checked","type","name","onChange","src","alt","width","height","RegisterWrapper","RegisterPanel","PanelHeader","Actions","RegisterComponent","props","next","state","canContinue","provider","register","selectProvider","e","setState","target","onSubmit","preventDefault","this","href","rel","to","map","providerData","key","onClick","disabled","Component","RegisterContainer","HomeMessageComponent","WebId","useWebId","LoggedIn","Value","Alert","variant","LoggedOut","Home","HomeLogin","defaultIcon","L","Icon","Default","greenIcon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","MapRuta","ruta","mapID","getNombre","hitos","getCoords","zoom","inicio","getInicio","refMapa","React","createRef","Map","ref","center","TileLayer","attribution","url","drawRoute","position","popupText","Marker","Popup","icon","icons","points","push","h","lat","long","Polyline","color","positions","getStartMarker","c","i","getMarker","hito","getPolyLine","getHitos","coords","getLat","getLong","Comentario","fecha","texto","autor","persona","commentDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","CommentBox","comment","commentList","onlyRead","loading","empty","loaded","handleOnChange","handleAddComment","a","commentText","date","Date","routeUUID","getUUID","webID","author","getWebId","comentarRuta","loadComments","uuid","obtenerComentariosRuta","length","handleClick","Accordion","Card","Header","Toggle","as","Button","eventKey","Collapse","Body","InputGroup","Form","Control","placeholder","rows","Spinner","animation","role","getAutor","getFormattedDate","Text","getTexto","PhotoGallery","route","imageList","selectedImages","ableToUpload","onChangeHandler","event","files","handleUpload","subirFicheroARuta","loadImages","obtenerFicherosRuta","urls","imageObjects","thumbnail","thumbnailWidth","tWidth","thumbnailHeight","tHeight","handleOnClick","$","document","ready","bsCustomFileInput","init","Title","images","Footer","Container","fluid","Row","Col","File","multiple","accept","custom","data-browse","RouteCard","isDeleting","clickOnPointTooltip","handleIsDeleting","size","delete","handleDelete","flyToPoint","latlng","flyTo","showClickOnPointTooltip","Overlay","refTablaHitos","show","placement","Tooltip","lng","permisosValidos","handleShare","md","getDescripcion","Table","striped","bordered","hover","showMap","GroupSelect","clickItem","index","selected","add","amigos","v","ListGroup","Item","getFoto","SharePanel","loadingFriends","addFriend","selectedFriends","deleteFriend","indexOf","splice","share","shareRuta","cancel","getAmigos","Modal","centered","RouteList","handleDeleteRoute","nombre","deleteRuta","rutas","emptyList","routeToShare","showSharePanel","cancelShare","toggleSharePanel","getRutas","handleLoaded","defaultActiveKey","r","PacmanViewLoader","active","spinner","display","margin","text","styles","wrapper","Hito","latitud","longitud","Ruta","descripcion","uuidv4","comentarios","ficheros","comentario","fichero","hitosAdd","auth","result","currentSession","session","webId","newDocument","insertData","fetchDocument","profileDocument","profile","getSubject","storage","getRef","space","routesListRef","routesList","createDocument","save","routeDocument","newPoint","addSubject","identifier","identifierPrefix","addString","schema","addDecimal","latitude","longitude","addInteger","addRef","rdf","newRoute","fc","getRootStorage","readFolder","then","content","folder","catch","err","existsFileInFolder","file","deleteFile","sourceURL","Persona","foto","getPersonaByWebId","profileDoc","person","getString","readRouteFromUrl","routeDoc","puntos","getSubjectsOfType","getDecimal","setUUID","parseInt","orden","getInteger","sort","sortByOrder","setHitos","getDateTime","datePublished","setAutor","addComentario","MediaObject","contentUrl","addFichero","b","findRouteURL","authorWebId","routeURL","getSharedRouteFriends","mySharedRoutesDocument","getAllSubjectsOfType","getLiteral","getAllRefs","agent","amigo","replace","updateRoutePermissions","friends","filePath","permissions","agents","modes","AccessControlList","MODES","APPEND","READ","ACLFile","createACL","listRoutes","readRoutes","folderRoute","request","getInboxUrl","ldp","inbox","sendNotificationBody","targetWebId","body","method","uri","headers","error","response","getNotificationDocuments","containerDoc","containerSub","containerItemUrls","contains","doc","routeName","deleteFromSharedRoutes","sendRouteDeletedNotification","deleteFilesFromRoute","removeSubject","asRef","friendWebId","friendWebIds","getAllNodeRefs","friend","isValidProfile","newFriend","newKnown","isValid","addToMySharedRoutes","addLiteral","sendShareInvitation","addSharedRoute","routeUrl","sharedRoutesDocument","repeated","newShare","deleteFromfriendSharedRoutes","friendSharedRoutesDocument","Notificacion","titulo","mensaje","tipo","documents","message","action","RutaAmigo","routeOwnerWebID","sendCommentNotification","myWebId","newComment","addDateTime","getFecha","success","filenames","fileName","reader","FileReader","onload","f","fetch","force","credentials","ok","readAsArrayBuffer","sendMediaNotification","fileRoute","nombreFicheros","AppPermission","checkPermissions","userApp","WRITE","CONTROL","every","permission","includes","BackMain","addRoute","deleteRoute","listFriends","rutaUUID","shareRoute","processSharedRoutes","listSharedRoutes","addCommentToRoute","listCommentsOfRoute","addMediaToRoute","listMediaOfRoute","validAppPermissions","RutaService","BDRutas","inicializarBD","r1","r2","addHito","listarRutas","listarRutasCompartidasConmigo","rutaNombre","borrarRuta","parseFloat","añadirRuta","compartirRuta","procesarRutasCompartidas","permisosAppValidos","AmigoService","BDAmigos","amigo1","amigo2","amigo3","listarAmigos","añadirAmigo","getPersonByWebID","VerRutas","current","leafletElement","rutaService","amigoService","Jumbotron","NavBar","Navbar","bg","Brand","Nav","Link","NotLoggedInLayout","component","rest","matchProps","AuthNavBar","logout","PrivateLayout","service","history","match","PublicLayout","AddFriend","handleKeyPress","string","Prepend","handleAddFriend","isLoading","FriendList","showComponent","noFriends","scope","MessageDialog","title","handleAceptar","Friends","showDialog","dialogMessage","showError","addAmigo","HashViewLoader","SharedWithMe","rutasCompartidas","getRutasCompartidasConmigo","sharedRoutes","sharedRoute","getRuta","getAmigo","ShareView","MapPointModal","nameValue","latValue","lngValue","onChangeName","onChangeLat","onChangeLng","modificar","parseData","handleModifyPoint","handleClose","showModal","point","FormControl","step","isNaN","latLng","AddRouteMap","clickedPoint","hideModal","getUserPosition","navigator","geolocation","getCurrentPosition","handleClickOnMap","o","updatePoints","deleteLastPoint","lastIndex","deleteAllPoints","getPolyline","p","updatedPoints","ButtonToolbar","aria-label","ButtonGroup","onclick","doubleClickZoom","ondblclick","AddRutaMap","isAdding","routeIsAdded","invalidName","invalidDescription","invalidPoints","handleAdd","handleScrollIntoView","nameField","descriptionField","pointsField","slice","addRutaObject","handleIsAdding","handleRouteAdded","onChangeDescription","showErrorTooltTip","style","testid","padding","AddMapView","scrollIntoView","behavior","block","AddMenu","Img","AddRuta","longitudInicio","latitudInicio","nombreHito","longitudHito","latitudHito","formulario1","formulario2","onSubmit2","newHito","crearRuta","addRuta","alert","required","formulario","App","store","addNotification","getTitulo","getMensaje","getTipo","insert","container","animationIn","animationOut","dismiss","duration","onScreen","intervalId","setInterval","procesarRutas","clearInterval","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","origin","addEventListener","contentType","get","status","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a2157876.chunk.js","sourcesContent":["type ProviderEntity = {\n  label: String,\n  image: String,\n  value: String,\n  registerLink: String,\n  description: String,\n};\n\nexport default class Provider {\n  /*\n   *  Function to get providers. This is to mimic the future provider registry\n   */\n  static getIdentityProviders(): Array<ProviderEntity> {\n    return [\n      {\n        id: \"inrupt\",\n        label: \"Inrupt\",\n        image: process.env.PUBLIC_URL + \"/img/inrupt.svg\",\n        value: \"https://inrupt.net/auth\",\n        registerLink: \"https://inrupt.net/register\",\n        description: \"Lorem ipsum dolor sit amet non ipsom dolor\",\n      },\n      {\n        id: \"solid-community\",\n        label: \"Solid Community\",\n        image: process.env.PUBLIC_URL + \"/img/community.png\",\n        value: \"https://solid.community\",\n        registerLink: \"https://solid.community/register\",\n        description: \"Lorem ipsum dolor sit non consectetur\",\n      },\n      {\n        id: \"local-pod-server\",\n        label: \"Servidor Local\",\n        image: process.env.PUBLIC_URL + \"/img/server.png\",\n        value: \"https://localhost:8443\",\n        registerLink: \"https://localhost:8443/register\",\n        description: \"Nuestro propio servidor de PODS\",\n      },\n    ];\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Gradient = styled.div`\n  background-image: linear-gradient(135deg, #7c4dff 0%, #18a9e6 50%, #01c9ea 100%);\n  background-repeat: no-repeat;\n  box-sizing: border-box;\n  height: 100%;\n  width: 100%;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url('/img/background-pattern.svg');\n    filter: opacity(30%);\n  }\n`\n","import React from \"react\";\n\nimport { Gradient } from \"./gradient-background.style\";\n\ntype Props = {\n  children: React.Node,\n  className: String\n};\n\nconst GradientBackground = ({ children, className }: Props) => (\n  <Gradient className={className}>{children}</Gradient>\n);\n\nexport default GradientBackground;\n","import { css } from \"styled-components\";\n\nconst sizes = {\n  desktop: 992,\n  desktopSm: 1024,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (min-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n","import styled from \"styled-components\";\n\nimport { media } from \"../../../../utils/styledComponents\";\n\nexport const PanelWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #ffffff;\n  border-radius: 4px;\n  box-sizing: border-box;\n  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.3);\n  min-width: 310px;\n  min-height: 403px;\n  position: relative;\n  margin: auto;\n  padding: 40px;\n  text-align: center;\n\n  & > h1,\n  & > h2 {\n    padding: 0;\n    margin: 0;\n  }\n\n  @media screen and (max-width: 992px) {\n    width: auto;\n  }\n  ${media.tablet`\n    min-width: 420px;\n  `}\n`\n","import React from \"react\";\n\nimport { PanelWrapper } from \"./panel.style\";\n\ntype Props = {\n  children: React.Node,\n  className: String\n};\n\nconst Panel = ({ children, className }: Props) => (\n  <PanelWrapper className={className}>{children}</PanelWrapper>\n);\n\nexport default Panel;\n","import styled from \"styled-components\";\nimport GradientBackground from \"../utils/GradientBackground/gradient-background.component\";\nimport Panel from \"../utils/panel/panel.component\";\n\nexport const LoginWrapper = styled(GradientBackground)`\n  h1 {\n    color: #ffffff;\n  }\n  margin-top: 60px;\n`\n\nexport const LoginPanel = styled(Panel)``\n\nexport const PanelBody = styled.div`\n  display: grid;\n  flex-direction: column;\n\n  .provider-login-component {\n    div[role='option'] {\n      text-align: left !important;\n      padding-left: 20px;\n    }\n  }\n`\n\nexport const LoginTitle = styled.span`\n  color: #656e75;\n  font-family: Raleway;\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 1.2px;\n  line-height: 19px;\n  text-align: center;\n  position: relative;\n  margin: 30px 0;\n  display: inline-block;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &::before,\n  &::after {\n    width: 32%;\n    content: '';\n    background: #656e75;\n    height: 1px;\n    box-sizing: border-box;\n    top: 50%;\n  }\n\n  span {\n    padding: 0 5px;\n  }\n\n  &::before {\n    right: 0;\n  }\n\n  &::after {\n    left: 0;\n  }\n`\n","import styled from \"styled-components\";\n\nexport const CenterContainerWrapper = styled.section`\n  position: relative;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  h1 {\n    box-sizing: border-box;\n    padding: 0;\n    font-size: 28px;\n    color: rgb(40, 55, 82);\n    letter-spacing: 1.4px;\n    line-height: 40px;\n    text-align: center;\n    margin: 40px 0;\n    font-weight: bold;\n  }\n`\n","import React from \"react\";\nimport { CenterContainerWrapper } from \"./center-container.style\";\n\ntype Props = {\n  children: React.Node,\n  className: String\n};\n\nconst CenterContainer = ({ children, className }: Props) => (\n  <CenterContainerWrapper className={className}>\n    <div className=\"wrapper\">{children}</div>\n  </CenterContainerWrapper>\n);\n\nexport default CenterContainer;\n","import React from \"react\";\nimport {ProviderLogin} from \"@inrupt/solid-react-components\";\nimport Provider from \"../../../services/authentication/Proveedor\";\nimport { LoginWrapper, LoginPanel, PanelBody } from \"./login.style\";\nimport CenterContainer from \"../utils/CenterContainer/center-container.component\";\n\nexport const LogInComponent = () => {\n  return (\n    <LoginWrapper data-testid='login-wrapper'>\n      <CenterContainer>\n        <h1>Login en Viade</h1>\n        <LoginPanel className='login-panel'>\n          <PanelBody className='panel-body'>\n            <ProviderLogin\n              className='solid-provider-login-component'\n              callbackUri={`${window.location.protocol}//${window.location.host}/viade_es5b/#/`}\n              selectPlaceHolder='Seleccione su proveedor'\n              inputPlaceholder='Introduza la url de su webId'\n              formButtonText='Login'\n              btnTxtWebId='Login con el WebId'\n              btnTxtProvider='Login con el proveedor'\n              errorsText={{\n                unknown: 'Algo no va bien, prueba de nuevo...',\n                webIdNotValid: 'WebID no es válido',\n                emptyProvider: 'Proveedor Solid es necesario',\n                emptyWebId: 'WebId es necesario'\n              }}\n              providers={Provider.getIdentityProviders()}\n            />\n          </PanelBody>\n        </LoginPanel>\n      </CenterContainer>\n    </LoginWrapper>\n  );\n}\nexport default LogInComponent\n","import React from \"react\";\n\n\ntype Props = {\n  data: any,\n  onSelect: Function,\n  radioName: String,\n  id: String,\n  checked: Boolean\n};\n\nconst ProviderItem = ({ data, onSelect, radioName, id, checked }: Props) => (\n      <div className=\"img-group\">\n        <input\n          type=\"radio\"\n          name={radioName}\n          id={id}\n          onChange={onSelect}\n          value={data.registerLink}\n          checked={checked}\n        />\n        <img src={data.image} alt=\"\" width=\"50\" height=\"50\"/>\n        <span className=\"label\">{data.label}</span>\n      </div>\n);\n\nexport default ProviderItem;\n","import styled from \"styled-components\";\nimport Panel from \"../utils/panel/panel.component\";\n\nexport const RegisterWrapper = styled.section`\n  h1 {\n    color: #ffffff;\n  }\n\n  //Todo: figure out why this is necessary\n  margin-top: 100px;\n`;\n\nexport const RegisterPanel = styled(Panel)`\n  justify-content: space-between;\n`;\n\nexport const PanelHeader = styled.div`\n  position: relative;\n\n  h2 {\n    position: relative;\n    padding: 0;\n    color: #5361fd;\n    font-family: Raleway;\n    font-size: 20px;\n    font-weight: bold;\n    letter-spacing: 0.75px;\n    line-height: 24px;\n    text-align: center;\n    margin: 0;\n    animation: fadeIn 0.5s ease-in;\n  }\n\n  .progress-bar {\n    position: absolute;\n    height: 1px;\n    width: 100%;\n    background: #5361fd;\n    top: 30px;\n  }\n`;\n\nexport const PanelBody = styled.div`\n  height: 100% !important;\n  animation: fadeIn 0.2s ease-in;\n\n  a {\n    display: block;\n    color: #449df5;\n    font-family: Raleway;\n    font-size: 12px;\n    font-weight: 600;\n    letter-spacing: 0.75px;\n    line-height: 14px;\n    text-align: center;\n    text-decoration: none;\n\n    &:hover {\n      font-weight: 700;\n    }\n  }\n\n  .a-with-spacing {\n    margin: 24px 0;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport const Actions = styled.div`\n  height: 32px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n\n  button {\n    height: 32px;\n    width: 150px;\n    border-radius: 4px;\n    font-family: Raleway;\n    font-size: 10px;\n    font-weight: bold;\n    letter-spacing: 0.89px;\n    line-height: 11px;\n    text-align: center;\n    text-transform: uppercase;\n    border: solid 2px #449df5;\n    box-sizing: border-box;\n  }\n\n  .btn-solid {\n    background-color: #449df5;\n    color: #ffffff;\n  }\n\n  .btn-outlined {\n    background-color: #ffffff;\n    color: #449df5;\n    filter: opacity(40%);\n  }\n`;\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProviderItem from \"../children/ProviderItem/provider.item.component\";\nimport {\n  RegisterWrapper,\n  RegisterPanel,\n  PanelHeader,\n  PanelBody,\n  Actions,\n} from \"./register.style\";\nimport GradientBackground from \"../utils/GradientBackground/gradient-background.component\";\nimport CenterContainer from \"../utils/CenterContainer/center-container.component\";\n\ntype Provider = {};\n\ntype Register = {\n  provider: String,\n};\n\ntype Props = {\n  providers: Array<Provider>,\n};\n\ntype State = {\n  register: Register,\n  canContinue: false,\n};\n\nclass RegisterComponent extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canContinue: false,\n      register: {\n        provider: \"\",\n      },\n    };\n  }\n\n  next = () => {\n    const {\n      canContinue,\n      register: { provider },\n    } = this.state;\n    const { protocol, host } = window.location;\n    if (canContinue) {\n      //window.location = `${provider}?returnToUrl=${protocol}//${host}/register/success`;\n      window.location = `${provider}?returnToUrl=${protocol}//${host}/viade_es5b/#/`;\n    }\n  };\n\n  selectProvider = (e) => {\n    const { register } = this.state;\n    this.setState({\n      register: { ...register, provider: e.target.value },\n      canContinue: true,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      canContinue,\n      register: { provider },\n    } = this.state;\n    const { protocol, host } = window.location;\n    if (canContinue) {\n      //window.location = `${provider}?returnToUrl=${protocol}//${host}/register/success`;\n      window.location = `${provider}?returnToUrl=${protocol}//${host}/viade_es5b`;\n    }\n  };\n\n  render() {\n    const {\n      canContinue,\n      register: { provider },\n    } = this.state;\n    const { providers } = this.props;\n\n    return (\n      <GradientBackground>\n        <CenterContainer>\n          <RegisterWrapper className=\"register-wrapper\">\n            <h1 className=\"title\">Sign up en Viade</h1>\n            <form onSubmit={this.onSubmit}>\n              <RegisterPanel className=\"register-panel\">\n                <PanelHeader className=\"panel-header\">\n                  <h2>Selecciona proveedor</h2>\n                  <div className=\"progress-bar\" />\n                </PanelHeader>\n                <PanelBody className=\"panel-body\">\n                  <Fragment>\n                    <a\n                      href=\"https://solid.inrupt.com/how-it-works\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      ¿Que es un proveedor?\n                    </a>\n                    <Link to=\"/login\" className=\"a-with-spacing\">\n                      LogIn\n                    </Link>\n                    <ul>\n                      {providers.map((providerData) => (\n                        <ProviderItem\n                          className=\"providerItem\"\n                          data={providerData}\n                          key={providerData.id}\n                          onSelect={this.selectProvider}\n                          radioName=\"providerRadio\"\n                          id={`radio-${providerData.id}`}\n                          checked={providerData.registerLink === provider}\n                        />\n                      ))}\n                    </ul>\n                  </Fragment>\n                </PanelBody>\n                <Actions className=\"actions\">\n                  <button\n                    className=\"btn-solid\"\n                    onClick={this.next}\n                    type=\"submit\"\n                    disabled={!canContinue}\n                  >\n                    Continuar\n                  </button>\n                </Actions>\n              </RegisterPanel>\n            </form>\n          </RegisterWrapper>\n        </CenterContainer>\n      </GradientBackground>\n    );\n  }\n}\n\nexport { RegisterComponent };\n","import React, { Component } from \"react\";\nimport {RegisterComponent} from \"./RegisterComponente\";\nimport  Provider  from \"../../../services/authentication/Proveedor\";\n\ntype Props = {};\n\ntype State = {\n  providers: Array<Object>\n};\n\nclass RegisterContainer extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = { providers: [] };\n  }\n\n  async componentDidMount() {\n    const providers = await Provider.getIdentityProviders();\n    this.setState({ providers });\n  }\n\n  render() {\n    const { providers } = this.state;\n    return <RegisterComponent providers={providers} {...this.props} />;\n  }\n}\n\nexport default RegisterContainer;\n","import React from \"react\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\nimport { Alert } from \"react-bootstrap\";\nimport { Value, LoggedIn, LoggedOut } from \"@solid/react\";\n\nexport const HomeMessageComponent = () => {\n  const WebId = useWebId();\n\n  return (\n    <>\n      <LoggedIn data-testid=\"Logged\">\n        <h3 data-testid=\"logged\">\n          Hola <Value src=\"user.name\" />, has iniciado sesión con este WebID:\n        </h3>\n        <Alert variant=\"success\">{WebId}</Alert>\n      </LoggedIn>\n      <LoggedOut data-testid=\"noLogged\">\n        <Alert data-testid=\"noLogged\" variant=\"warning\">\n          Aún no has iniciado sesión. <a data-testid=\"noLogged2\" href=\"#/login\">Iniciar sesión</a>\n        </Alert>\n      </LoggedOut>\n    </>\n  );\n};\n\nexport default HomeMessageComponent;\n","import React, { Component } from \"react\";\nimport HomeLogin from \"./authentication/login/HomeLogin\";\nimport \"../css/spacing.css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"jumbotron text-center\">\n          <h1 data-testid=\"welcome\" className=\"display-2 mb-4\">\n            ¡Bienvenido a Viade!\n          </h1>\n          <HomeLogin />\n        </div>\n\n        <div className=\"jumbotron text-center\">\n          <h3 data-testid=\"header-title\" className=\"display-4\">\n            ¿Qué es Viade-Rutas?\n          </h3>\n          <p data-testid=\"p1\" className=\"parrafo-central\">\n            Viade-Rutas es un proyecto desarrollado por un grupo de alumnos de\n            la Escuela de Ingeniería Informática del Software, en Oviedo, para\n            la asignatura de Arquitectura del Software.\n          </p>\n          <p data-testid=\"p2\" className=\"parrafo-central\">\n            Se trata de una aplicación descentralizada, es decir, los datos con\n            los que trabaja no se almacenan en una base de datos central, sino\n            que cada usuario dispone de su propio espacio de almacenamiento, que\n            recibe el nombre de POD. Es aquí donde se almacenan los datos del\n            usuario junto con sus rutas, fotos, comentarios y además dispone de\n            la responsabilidad total sobre esos datos.\n          </p>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Home;\n","/**\n * Definición de elementos Marker de diferentes colores.\n */\nimport L from \"leaflet\";\n\n// DEFAULT\nexport var defaultIcon = new L.Icon.Default();\n\n// VERDE\nexport var greenIcon = new L.Icon({\n  iconUrl:\n    \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\",\n  shadowUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// AZUL\nexport var blueIcon = new L.Icon({\n  iconUrl:\n    \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\",\n  shadowUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// ROJO\nexport var redIcon = new L.Icon({\n  iconUrl:\n    \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png\",\n  shadowUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// AZUL\nexport var goldIcon = new L.Icon({\n  iconUrl:\n    \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-gold.png\",\n  shadowUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// NARANJA\nexport var orangeIcon = new L.Icon({\n  iconUrl:\n    \"https://cdn.rawgit.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-orange.png\",\n  shadowUrl:\n    \"https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n","import React, { Component } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Map, Marker, Popup, TileLayer, Polyline } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport * as icons from \"./MarkerIcons\";\n\n// Sin esto no se muestran los Markers\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\n/**\n * Componente MapRuta que contiene toda la lógica necesaria\n * para cargar una ruta en un mapa, del módulo leaflet.\n */\nclass MapRuta extends Component {\n  constructor(props) {\n    super(props);\n    this.ruta = this.props.ruta; // Ruta a representar en el mapa\n    this.mapID = `mapa-${this.props.ruta.getNombre()}`; // ID del mapa\n    this.hitos = this.getCoords(this.props.ruta); // obtenemos la lista de coordenadas de los hitos\n    this.zoom = 10;\n    this.inicio = this.props.ruta.getInicio(); // Coordenadas de inicio de la ruta\n    this.refMapa = React.createRef();\n  }\n\n  render() {\n    return (\n      <Map ref={this.props.refMapa} center={this.inicio} zoom={this.zoom}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {this.drawRoute()}\n      </Map>\n    );\n  }\n\n  /*\n   * Método que dada una posición [lat, long] devuelve\n   * un elemento Marker con un popup con el texto que le\n   * pasamos como parámetro.\n   */\n  getMarker(position, popupText, key) {\n    return (\n      <Marker key={key} position={position}>\n        <Popup>{popupText}</Popup>\n      </Marker>\n    );\n  }\n\n  /**\n   * Devuelve un elemento Marker que señala\n   * el inicio de la ruta, de color verde.\n   */\n  getStartMarker() {\n    return (\n      <Marker key={0} position={this.inicio} icon={icons.greenIcon}>\n        <Popup>{`Inicio: ${this.ruta.getNombre()}`}</Popup>\n      </Marker>\n    );\n  }\n\n  /**\n   * Se encarga de generar un array con los pares\n   * de coordenadas del inicio de la ruta y de sus hitos.\n   */\n  getPolyLine() {\n    var points = [];\n    points.push(this.inicio, ...this.hitos.map((h) => [h.lat, h.long]));\n    return <Polyline color=\"red\" positions={points} />;\n  }\n\n  /*\n   * Se encarga de dibujar la ruta con sus marcadores\n   * y una polylinea que los une.\n   */\n  drawRoute() {\n    return (\n      <div>\n        {this.getStartMarker()}\n        {this.hitos.map((c, i) => this.getMarker([c.lat, c.long], c.hito, i++))}\n        {this.getPolyLine()}\n      </div>\n    );\n  }\n\n  /*\n   * Dada una ruta, devuelve una lista con los puntos\n   * de cada uno de los hitos de la ruta, incluyendo el inicio.\n   */\n  getCoords(ruta) {\n    var hitos = ruta.getHitos();\n    var coords = [];\n\n    for (var i in ruta.getHitos()) {\n      const name = hitos[i].getNombre();\n      const lat = hitos[i].getLat();\n      const long = hitos[i].getLong();\n      coords.push({\n        hito: name,\n        lat,\n        long,\n      });\n    }\n    return coords;\n  }\n}\n\nexport default MapRuta;\n","class Comentario {\n\tconstructor (fecha, texto) {\n\t\tthis.fecha = fecha;\n\t\tthis.texto = texto;\n\t}\n\n\tgetFecha () {\n\t\treturn this.fecha;\n\t}\n\n\tsetFecha (fecha) {\n\t\tthis.fecha = fecha;\n\t}\n\n\tgetAutor () {\n\t\treturn this.autor;\n\t}\n\n\tsetAutor (persona) {\n\t\tthis.autor = persona;\n\t}\n\n\tgetTexto () {\n\t\treturn this.texto;\n\t}\n\n\tsetTexto (texto) {\n\t\tthis.texto = texto;\n\t}\n\n\tgetFormattedDate () {\n\t\tlet commentDate = \"\";\n\t\tif (this.fecha != null) {\n\t\t\tcommentDate = \"Publicado: \" +\n      this.fecha.getDate() +\n      \"/\" +\n      (this.fecha.getMonth() + 1) +\n      \"/\" +\n      this.fecha.getFullYear() +\n      \" \" +\n      this.fecha.getHours() +\n      \":\" +\n      ((this.fecha.getMinutes() < 10 ? \"0\" : \"\") + this.fecha.getMinutes()) +\n      \":\" +\n      this.fecha.getSeconds();\n\t\t}\n\t\treturn commentDate;\n\t}\n\n\ttoString () {\n\n\t}\n}\n\nexport default Comentario;\n","import React, { Component } from \"react\";\nimport {\n  Accordion,\n  Card,\n  InputGroup,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport Comentario from \"../../model/Comentario\";\nimport \"../../css/scroll.css\";\n\n/**\n * Clase que representa un componente de una caja de comentarios.\n * Recibe sus funcionalidades del padre.\n */\nclass CommentBox extends Component {\n  state = {\n    comment: \"\",\n    commentList: [],\n    onlyRead: this.props.onlyRead,\n    loading: true,\n    empty: false,\n    loaded: false,\n  };\n\n  render() {\n    return (\n      <Accordion data-testid=\"Acordeon\">\n        <Card data-testid=\"cardEnv\">\n          <Card.Header>\n            <Accordion.Toggle\n              as={Button}\n              variant=\"link\"\n              eventKey=\"0\"\n              data-testid=\"btComment\"\n              onClick={this.handleClick}\n            >\n              Comentarios\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              {!this.state.onlyRead && (\n                <div>\n                  <InputGroup data-testid=\"cajaComent\">\n                    <Form.Control\n                      placeholder=\"Haz un comentario...\"\n                      as=\"textarea\"\n                      rows=\"2\"\n                      value={this.state.comment}\n                      onChange={this.handleOnChange}\n                      data-testid=\"commentRoute\"\n                    />\n                  </InputGroup>\n                  <Button\n                    data-testid=\"btPublicar\"\n                    className=\"mt-2 mb-2\"\n                    variant=\"success\"\n                    onClick={this.handleAddComment}\n                  >\n                    Publicar\n                  </Button>\n                </div>\n              )}\n              {this.state.loading && (\n                <Spinner\n                  className=\"mt-2\"\n                  as=\"span\"\n                  animation=\"border\"\n                  role=\"status\"\n                />\n              )}\n              {this.state.empty && (\n                <Alert variant=\"warning\">Aún no hay comentarios</Alert>\n              )}\n              {this.state.commentList.length > 0 && (\n                <div className=\"scroll-container\">\n                  {this.state.commentList.map((c, key) => {\n                    return (\n                      <Card\n                        className=\"mb-4 mr-2\"\n                        data-testid=\"cajaComentario\"\n                        key={key++}\n                      >\n                        <Card.Header>{`${c\n                          .getAutor()\n                          .getNombre()} ${c.getFormattedDate()}`}</Card.Header>\n                        <Card.Body>\n                          <Card.Text>{c.getTexto()}</Card.Text>\n                        </Card.Body>\n                      </Card>\n                    );\n                  })}\n                </div>\n              )}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n\n  /**\n   * Manejador para recolectar el texto del comentario\n   * que introduce el usuario en el input.\n   */\n  handleOnChange = (e) => {\n    this.setState({ comment: e.target.value });\n  };\n\n  handleAddComment = async () => {\n    this.setState({ loading: true, empty: false });\n    //Recolección de datos del comentario\n    let commentText = this.state.comment;\n    let date = new Date();\n    let routeUUID = this.props.ruta.getUUID();\n    this.setState({ comment: \"\" });\n    // Creamos el objeto Comment\n    let comment = new Comentario(date, commentText);\n    let webID = this.props.author == null ? null : this.props.author.getWebId();\n    if (await this.props.comentarRuta(comment, routeUUID, webID)) {\n      // Lo guardamos en el pod del autor\n      this.loadComments(); // Recuperamos los comentarios\n    }\n  };\n\n  /**\n   * Carga los comentarios desde el pod del usuario indicado,\n   * asociados a esta ruta.\n   */\n  loadComments = async () => {\n    this.setState({ loading: true });\n    let uuid = this.props.ruta.getUUID();\n    let webID = this.props.author == null ? null : this.props.author.getWebId();\n    this.setState({\n      commentList: await this.props.obtenerComentariosRuta(uuid, webID),\n      loading: false,\n    });\n\n    this.setState({ empty: this.state.commentList.length === 0 });\n  };\n\n  /**\n   * Se ejecutará cuando se haga click sobre el link\n   * para desplegar la caja de comentarios.\n   */\n  handleClick = () => {\n    if (!this.state.loaded) {\n      this.loadComments();\n      this.setState({ loaded: true });\n    }\n  };\n}\n\nexport default CommentBox;\n","import React, { Component } from \"react\";\nimport {\n  Container,\n  Row,\n  Alert,\n  Spinner,\n  Form,\n  Card,\n  Button,\n  Col\n} from \"react-bootstrap\";\nimport Gallery from \"react-grid-gallery\";\nimport bsCustomFileInput from \"bs-custom-file-input\";\nimport $ from \"jquery\";\nimport \"../../css/photo-gallery.css\";\n\nclass PhotoGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.tWidth = 85;\n    this.tHeight = 85;\n  }\n\n  state = {\n    route: this.props.ruta,\n    imageList: [],\n    selectedImages: [],\n    ableToUpload: false,\n    loading: true,\n    loaded: false,\n    empty: false,\n    onlyRead: this.props.onlyRead\n  };\n\n  componentDidMount() {\n    // Input file dinamico.\n    $(document).ready(function() {\n      bsCustomFileInput.init();\n    });\n    this.loadImages();\n  }\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Header>\n            <Card.Title>Galería</Card.Title>\n          </Card.Header>\n          <Card.Body>\n            <Gallery images={this.state.imageList} />\n            {this.state.loading && (\n              <>\n                <Spinner\n                  className=\"mr-2\"\n                  as=\"span\"\n                  animation=\"border\"\n                  role=\"status\"\n                />\n                Cargando imágenes...\n              </>\n            )}\n            {this.state.empty && (\n              <Alert variant=\"warning\">Aún no hay imágenes.</Alert>\n            )}\n          </Card.Body>\n          <Card.Footer>\n            {!this.state.onlyRead && (\n              <Container fluid>\n                <Row>\n                  <Col>\n                    <Form className=\"input-img\">\n                      <Form.File\n                        label=\"Selecciona una imagen\"\n                        multiple\n                        accept=\"image/*\"\n                        custom\n                        onChange={this.onChangeHandler}\n                        data-browse=\"Examinar\"\n                      />\n                    </Form>\n                  </Col>\n                  <Col>\n                    <Button\n                      className=\"mt-2\"\n                      variant=\"success\"\n                      onClick={this.handleUpload}\n                      disabled={!this.state.ableToUpload}\n                    >\n                      Subir\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            )}\n          </Card.Footer>\n        </Card>\n      </>\n    );\n  }\n\n  onChangeHandler = event => {\n    this.setState({\n      selectedImages: event.target.files,\n      ableToUpload: event.target.files.length > 0\n    });\n  };\n\n  /**\n   * Se encarga de subir las imagenes al servidor.\n   */\n  handleUpload = async () => {\n    this.setState({ loading: true, empty: false });\n    let webID = this.props.author == null ? null : this.props.author.getWebId();\n    if (\n      await this.props.subirFicheroARuta(\n        // añadimos los ficheros a la ruta del pod.\n        this.state.selectedImages,\n        this.state.route.getUUID(),\n        webID\n      )\n    ) {\n      this.loadImages();\n    }\n  };\n\n  /**\n   * Devuelve la URL base\n   */\n  getBaseUrl() {\n    let url = window.location;\n    let base = url.protocol + \"//\" + url.host;\n    return base;\n  }\n\n  /**\n   * Carga las imágenes asociadas a la ruta de UUID indicado, desde el pod\n   * del usuario indicado en las props. Si el usuario es null, se interpreta\n   * que el webId es el del usuario loggeado.\n   */\n  loadImages = async () => {\n    this.setState({ loading: true });\n    let uuid = this.state.route.getUUID();\n    let webID = this.props.author == null ? null : this.props.author.getWebId();\n    let urls = await this.props.obtenerFicherosRuta(uuid, webID);\n    let imageObjects = urls.map(url => {\n      // parseamos la lista de urls para obtener objetos imagen\n      return {\n        src: url,\n        thumbnail: url,\n        thumbnailWidth: this.tWidth,\n        thumbnailHeight: this.tHeight\n      };\n    });\n    this.setState({\n      imageList: imageObjects,\n      loading: false,\n      empty: imageObjects.length === 0\n    });\n  };\n\n  /**\n   * Se invoca cuando se hace click sobre el link para\n   * desplegar la galería.\n   */\n  handleOnClick = () => {\n    if (!this.state.loaded) {\n      this.loadImages();\n      this.setState({ loaded: true });\n    }\n  };\n}\n\nexport default PhotoGallery;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  Table,\n  Spinner,\n  Overlay,\n  Tooltip,\n} from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport MapRuta from \"../../map/MapRuta\";\nimport \"../../../css/map-style.css\";\nimport CommentBox from \"../../share/CommentBox\";\nimport PhotoGallery from \"../../share/PhotoGallery\";\n\n/**\n * Representa un elemento Card con la\n * información de la ruta que encapsula.\n */\nclass RouteCard extends Component {\n  constructor(props) {\n    super(props);\n    this.refMapa = React.createRef(); // Referencia al mapa donde se representa la ruta\n    this.refTablaHitos = React.createRef(); // Referencia a la tabla de hitos.\n  }\n\n  state = {\n    isDeleting: false, // Indica si la ruta está  siendo eliminada del POD.\n    clickOnPointTooltip: true, // Indica true si hay que mostrar el tooltip de ayuda para clickar sobre los hitos.\n  };\n\n  componentDidMount() {\n    this.props.flyTo(\n      {\n        lat: this.props.ruta.getInicio()[0],\n        lng: this.props.ruta.getInicio()[1],\n      },\n      13,\n      this.refMapa\n    );\n    /*\n    this.refMapa.current.leafletElement.flyTo(\n      {\n        lat: this.props.ruta.getInicio()[0],\n        lng: this.props.ruta.getInicio()[1],\n      },\n      13\n    );\n    */\n  }\n\n  render() {\n    return (\n      <Card>\n        <Card.Header>\n          <h3 data-testid=\"r-title\">{this.props.ruta.getNombre()}</h3>\n          {this.props.permisosValidos && (\n            <Button\n              data-testid=\"rb-compartir\"\n              variant=\"success\"\n              className=\"mr-2\"\n              onClick={() => this.props.handleShare(this.props.ruta)}\n            >\n              Compartir\n            </Button>\n          )}\n          {!this.props.permisosValidos && (\n            <Button\n              data-testid=\"rb-compartir\"\n              variant=\"warning\"\n              className=\"mr-2\"\n              disabled\n            >\n              Compartir\n            </Button>\n          )}\n\n          <Button\n            data-testid=\"rb-eliminar\"\n            variant=\"danger\"\n            onClick={() => this.delete()}\n          >\n            {this.handleIsDeleting()}\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <Container fluid>\n            <Row>\n              <Col md={8}>\n                <Row>\n                  <Col md=\"auto\">\n                    <Card.Title>Descripción</Card.Title>\n                    <Card.Text data-testid=\"r-description\">\n                      {this.props.ruta.getDescripcion()}\n                    </Card.Text>\n                    <Card.Title>Hitos</Card.Title>\n                    {this.showClickOnPointTooltip()}\n                    <Table striped bordered hover ref={this.refTablaHitos}>\n                      <thead>\n                        <tr>\n                          <th>Nombre</th>\n                          <th>Latitud</th>\n                          <th>Longitud</th>\n                        </tr>\n                      </thead>\n                      <tbody data-testid=\"r-hitos\">\n                        <tr\n                          onClick={() =>\n                            this.flyToPoint({\n                              lat: this.props.ruta.getInicio()[0],\n                              lng: this.props.ruta.getInicio()[1],\n                            })\n                          }\n                        >\n                          <td>\n                            <b>Inicio</b>\n                          </td>\n                          <td>{this.props.ruta.getInicio()[0]}</td>\n                          <td>{this.props.ruta.getInicio()[1]}</td>\n                        </tr>\n                        {this.props.ruta.getHitos().map((h, key) => (\n                          <tr\n                            key={key++}\n                            onClick={() =>\n                              this.flyToPoint({\n                                lat: h.getLat(),\n                                lng: h.getLong(),\n                              })\n                            }\n                          >\n                            <td>{h.getNombre()}</td>\n                            <td>{h.getLat()}</td>\n                            <td>{h.getLong()}</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </Table>\n                  </Col>\n                  <Col>\n                    <CommentBox\n                      author={null}\n                      ruta={this.props.ruta}\n                      onlyRead={false}\n                      comentarRuta={this.props.comentarRuta}\n                      obtenerComentariosRuta={this.props.obtenerComentariosRuta}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <PhotoGallery\n                      author={null}\n                      ruta={this.props.ruta}\n                      onlyRead={false}\n                      subirFicheroARuta={this.props.subirFicheroARuta}\n                      obtenerFicherosRuta={this.props.obtenerFicherosRuta}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col md={4}>\n                <Row>\n                  <Col>\n                    <div\n                      id={`mapa-${this.props.ruta.getNombre()}`}\n                      className=\"ml-3 mb-3\"\n                    >\n                      {this.props.showMap && (\n                        <MapRuta\n                          className=\"map\"\n                          ruta={this.props.ruta}\n                          data-testid=\"mapa\"\n                          refMapa={this.refMapa}\n                        />\n                      )}\n                    </div>\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  /**\n   * Método que se encarga de renderizar un componente\n   * u otro en función de si se está eliminando la ruta actual.\n   */\n  handleIsDeleting = () => {\n    if (this.state.isDeleting) {\n      return (\n        <div>\n          <Spinner\n            className=\"mr-2\"\n            as=\"span\"\n            size=\"sm\"\n            animation=\"border\"\n            role=\"status\"\n          />\n          Eliminando...\n        </div>\n      );\n    }\n    return \"Eliminar\";\n  };\n\n  /**\n   * Manejador para el evento de eliminar una ruta del POD.\n   */\n  delete = async () => {\n    this.setState({ isDeleting: true });\n    await this.props.handleDelete(\n      this.props.ruta.getUUID(),\n      this.props.ruta.getNombre()\n    );\n    this.setState({ isDeleting: false });\n  };\n\n  /**\n   * Método encargado de 'volar' hasta las coordenadas\n   * que se le pasan como parámetro. Hace uso de referencias para\n   * acceder al mapa.\n   */\n  flyToPoint = (latlng) => {\n    this.setState({ clickOnPointTooltip: false }); // Se oculta el tooltip de ayuda\n    this.props.flyTo(latlng, 14, this.refMapa);\n    // let mapa = this.refMapa.current.leafletElement;\n    //  mapa.flyTo(latlng, 14);\n  };\n\n  /**\n   * Muestra en función del estado, un tooltip de ayuda para indicar\n   * que se puede hacer click sobre los hitos de la tabla.\n   */\n  showClickOnPointTooltip = () => {\n    return (\n      <Overlay\n        target={this.refTablaHitos}\n        show={this.state.clickOnPointTooltip}\n        placement=\"top\"\n      >\n        {(props) => (\n          <Tooltip data-testid=\"tooltip\" {...props}>\n            Puedes hacer click sobre un hito para centrarlo en el mapa.\n          </Tooltip>\n        )}\n      </Overlay>\n    );\n  };\n}\n\nexport default RouteCard;\n","import React, { Component } from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\n\n\n/**\n * Componente que modela una lista clickable de amigos,\n * que permite seleccionar a varios amigos con los que compartir\n * una ruta.\n */\nclass GroupSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.amigos = props.amigos;\n    this.state = {\n      selected: this.amigos.map(v => false)\n    };\n  }\n\n  state = {};\n  render() {\n    return (\n      <ListGroup data-testid=\"envoltorio\">\n        {this.amigos.map((a, key) => {\n          return (\n            <ListGroup.Item\n              data-testid=\"itemLista\"\n              className={\n                this.state.selected[key] === true ? \"active mb-1\" : \"mb-1\"\n              }\n              key={key++}\n              onClick={() => this.clickItem(key - 1)}\n            >\n                <img src={a.getFoto()!==null?a.getFoto():process.env.PUBLIC_URL +\"/img/defaultProfile.png\"} \n                  className=\"rounded-circle img-fluid\" alt=\"\" width=\"50\" height=\"50\"/>\n              {a.getNombre()}\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    );\n  }\n\n  clickItem = index => {\n    let selected = this.state.selected;\n    selected[index] = !selected[index];\n    this.setState({ selected: selected });\n    if (this.state.selected[index]) {\n      // Añadirlo a la lista del padre\n      this.props.add(this.amigos[index]);\n    } else {\n      // Borrarlo de la lista del padre.\n      this.props.delete(this.amigos[index]);\n    }\n  };\n}\n\nexport default GroupSelect;\n","import React, { Component } from \"react\";\nimport { Modal, Button, Spinner } from \"react-bootstrap\";\nimport GroupSelect from \"./GroupSelect\";\n\n/**\n * Componente que modela un panel para compartir la ruta seleccionada\n * con un grupo de amigos.\n */\nclass SharePanel extends Component {\n  constructor(props) {\n    super(props);\n    this.ruta = props.ruta;\n    this.selectedFriends = []; // lista de amigos seleccionados.\n  }\n\n  state = { amigos: [], loadingFriends: true };\n\n  async componentDidMount() {\n    this.setState({\n      amigos: await this.props.getAmigos(),\n      loadingFriends: false\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        data-testid=\"componenteModal\"\n        show={this.props.show}\n        size=\"lg\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title data-testid=\"titleCompartir\">\n            Compartir esta ruta\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4 data-testid=\"nombreRutaCompartir\">\n            Ruta: {this.props.ruta.getNombre()}\n          </h4>\n          <p data-testid=\"parrafoSeleccion\">\n            Selecciona a los amigos con los que deseas compartir esta ruta:\n          </p>\n          {this.state.loadingFriends && (\n            <>\n              <Spinner\n                className=\"mr-2\"\n                as=\"span\"\n                animation=\"border\"\n                role=\"status\"\n              ></Spinner>\n              Cargando amigos...\n            </>\n          )}\n          {!this.state.loadingFriends && (\n            <GroupSelect\n              amigos={this.state.amigos}\n              add={this.addFriend}\n              delete={this.deleteFriend}\n              data-testid=\"Selector\"\n            ></GroupSelect>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            data-testid=\"cancelarCompartirButton\"\n            variant=\"secondary\"\n            onClick={this.props.cancel}\n          >\n            Cancelar\n          </Button>\n          <Button\n            data-testid=\"compartirButton\"\n            variant=\"success\"\n            onClick={this.share}\n          >\n            Compartir\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  /**\n   * Invocado cuando se marca el checkbox de un amigo.\n   */\n  addFriend = webID => {\n    this.selectedFriends.push(webID);\n  };\n\n  /**\n   * Invocado cuando se desmarca el checkbox de un amigo.\n   */\n  deleteFriend = webID => {\n    let index = this.selectedFriends.indexOf(webID);\n    if (index !== -1) {\n      this.selectedFriends.splice(index, 1);\n    }\n  };\n\n  /**\n   * Método que comparte la ruta con los amigos seleccionados.\n   */\n  share = async () => {\n    for (let i = 0; i < this.selectedFriends.length; i++) {\n      await this.props.shareRuta(\n        this.selectedFriends[i].getWebId(),\n        this.ruta.getUUID()\n      );\n    }\n    this.props.cancel();\n  };\n}\n\nexport default SharePanel;\n","import React, { Component } from \"react\";\nimport { Accordion, Alert } from \"react-bootstrap\";\nimport RouteCard from \"./RouteCard\";\nimport SharePanel from \"../../share/SharePanel\";\n\n/**\n * Representa una lista que encapsula componentes\n * Card que contienen la información de cada ruta.\n */\nclass RouteList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rutas: [],\n      permisosValidos: true,\n      showSharePanel: false,\n      routeToShare: null,\n      emptyList: false,\n    };\n  }\n\n  async componentDidMount() {\n    let rutas = await this.props.getRutas();\n    let permisosValidos = await this.props.permisosValidos;\n    this.setState({\n      rutas: rutas,\n      permisosValidos: permisosValidos,\n      emptyList: rutas.length === 0,\n    });\n    this.props.handleLoaded(); // Indicamos al padre que ya se ha cargado la vista.\n  }\n\n  render() {\n    return (\n      <Accordion data-testid=\"acordeon\" defaultActiveKey=\"0\">\n        {!this.state.permisosValidos && (\n          <Alert data-testid=\"alerta\" variant=\"warning\">\n            La aplicación no dispone de los suficientes permisos para compartir\n            rutas. debe dar permiso a la aplicación para controlar los permisos\n            de los recursos.\n          </Alert>\n        )}\n        {this.state.emptyList && (\n          <Alert data-testid=\"alerta_no_rutas\" variant=\"warning\">\n            Actualmente no dispones de ninguna ruta en tu POD. Accede a\n            <a href=\"#/add-ruta\"> Añadir Ruta </a> para añadir una nueva ruta.\n          </Alert>\n        )}\n        {this.state.rutas.length > 0 &&\n          this.state.rutas.map((r, key) => {\n            return (\n              <RouteCard\n                role=\"r-card\"\n                handleDelete={this.handleDeleteRoute}\n                handleShare={this.handleShare}\n                ruta={r}\n                key={key++}\n                subirFicheroARuta={this.props.subirFicheroARuta}\n                obtenerFicherosRuta={this.props.obtenerFicherosRuta}\n                comentarRuta={this.props.comentarRuta}\n                obtenerComentariosRuta={this.props.obtenerComentariosRuta}\n                showMap={this.props.showMap}\n                permisosValidos={this.state.permisosValidos}\n                flyTo={this.props.flyTo}\n              />\n            );\n          })}\n\n        {this.toggleSharePanel()}\n      </Accordion>\n    );\n  }\n\n  /**\n   * Manejador para el borrado de una ruta.\n   */\n  handleDeleteRoute = async (uuid, nombre) => {\n    let rutas = await this.props.deleteRuta(uuid, nombre);\n    this.setState({\n      rutas: rutas,\n      emptyList: rutas.length === 0,\n    });\n  };\n\n  /**\n   * Manejador de eventos para compartir una ruta.\n   */\n  handleShare = (ruta) => {\n    this.setState({ routeToShare: ruta, showSharePanel: true });\n  };\n\n  /**\n   * Manejador de evento de click cuando se cancela\n   * compartir la ruta.\n   */\n  cancelShare = () => {\n    this.setState({ routeToShare: null, showSharePanel: false });\n  };\n\n  /**\n   * Muestra el panel Modal para compartir rutas, solo cuando\n   * se pulsa sobre el botón de Compartir.\n   */\n  toggleSharePanel = () => {\n    return (\n      this.state.showSharePanel && (\n        <SharePanel\n          ruta={this.state.routeToShare}\n          show={this.state.showSharePanel}\n          cancel={this.cancelShare}\n          getAmigos={this.props.getAmigos}\n          shareRuta={this.props.shareRuta}\n        ></SharePanel>\n      )\n    );\n  };\n}\n\nexport default RouteList;\n","import React, { Component } from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\n\nclass PacmanViewLoader extends Component {\n  state = {};\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.props.loading}\n        spinner={\n          <PacmanLoader\n            size={25}\n            color={\"#50E3C2\"}\n            css={{ display: \"block\", margin: \"0 20vh 5vh\" }}\n          />\n        }\n        text={this.props.text}\n        styles={{\n          wrapper: {\n            width: \"100%\",\n            height: \"100vh\"\n          }\n        }}\n      >\n        {this.props.children}\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default PacmanViewLoader;\n","class Hito {\n\tconstructor (nombre, latitud, longitud) {\n\t\tthis.nombre = nombre; // Nombre del hito.\n\t\t// Coordenadas del hito\n\t\tthis.longitud = longitud;\n\t\tthis.latitud = latitud;\n\t}\n\n\t/*\n   * Devuelve el nombre del hito.\n   */\n\tgetNombre () {\n\t\treturn this.nombre;\n\t}\n\n\t/*\n   * Devuelve la componente longitud de las coordenadas\n   * del hito.\n   */\n\tgetLong () {\n\t\treturn this.longitud;\n\t}\n\n\t/*\n   * Devuelve la componente latitud de las coords.\n   * del hito.\n   */\n\tgetLat () {\n\t\treturn this.latitud;\n\t}\n\n\ttoString () {\n\t}\n}\n\nexport default Hito;\n","import Hito from \"./Hito\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass Ruta {\n\tconstructor (nombre, inicio, descripcion) {\n\t\tthis.uuid = uuidv4();\n\t\tthis.nombre = nombre; // Nombre de la ruta\n\t\tthis.inicio = inicio; // Coordenadas del lugar de inicio\n\t\tthis.descripcion = descripcion;\n\t\tthis.hitos = []; // Hitos de la ruta\n\t\tthis.comentarios = []; // Comentarios de la ruta\n\t\tthis.ficheros = []; // ficheros de la ruta\n\t}\n\n\t/*\n   * Devuelve el nombre de la ruta\n   */\n\tgetNombre () {\n\t\treturn this.nombre;\n\t}\n\n\t/*\n   * Devuelve las coordenadas [lat, long] del lugar de inicio\n   */\n\tgetInicio () {\n\t\treturn this.inicio;\n\t}\n\n\t/*\n   * Devuelve la lista de hitos de la ruta.\n   */\n\tgetHitos () {\n\t\treturn this.hitos;\n\t}\n\n\t/**\n   * Devuelve la descripción de la ruta.\n   */\n\tgetDescripcion () {\n\t\treturn this.descripcion;\n\t}\n\n\t/**\n   * Devuelve el UUID de la ruta.\n   */\n\tgetUUID () {\n\t\treturn this.uuid;\n\t}\n\n\tsetUUID (uuid) {\n\t\tthis.uuid = uuid;\n\t}\n\n\tgetComentarios () {\n\t\treturn this.comentarios;\n\t}\n\n\tsetComentarios (comentarios) {\n\t\tthis.comentarios = comentarios;\n\t}\n\n\taddComentario (comentario) {\n\t\tthis.comentarios.push(comentario);\n\t}\n\n\taddFichero (fichero) {\n\t\tthis.ficheros.push(fichero);\n\t}\n\n\tsetFicheros (ficheros) {\n\t\tthis.ficheros = ficheros;\n\t}\n\n\tgetFicheros () {\n\t\treturn this.ficheros;\n\t}\n\n\t/*\n   * Añade un hito a la ruta.\n   */\n\taddHito (hito) {\n\t\tthis.hitos.push(hito);\n\t}\n\n\tsetHitos (hitosAdd) {\n\t\tthis.hitos = [];\n\t\tfor (var h in hitosAdd) {\n\t\t\tthis.hitos.push(\n\t\t\t\tnew Hito(hitosAdd[h].nombre, hitosAdd[h].latitud, hitosAdd[h].longitud)\n\t\t\t);\n\t\t}\n\t}\n\n\ttoString () {\n\t}\n}\n\nexport default Ruta;\n","import { space, rdf, schema } from \"rdf-namespaces\";\nimport { fetchDocument, createDocument } from \"tripledoc\";\n\nconst auth = require(\"solid-auth-client\");\n\nexport async function addRoute(ruta) {\n\n\tvar result = false;\n\tconst session = await auth.currentSession();\n\tif (!session) { window.location.href = \"/login\"; }\n\tconst route = \"private/viade_es5b/routes/\" + ruta.getUUID() + \".ttl\";\n\tconst webId = session.webId;\n\n\tresult = await newDocument(webId, route);\n\tresult = await insertData(webId, route, ruta);\n\treturn result;\n}\n\n\n// https://github.com/solid/solidproject.org/blob/staging/_posts/for-developers/apps/first-app/2019-01-01-04_data-model.md\n// https://vincenttunru.gitlab.io/tripledoc/\nasync function newDocument(webId, route) {\n\tconst profileDocument = await fetchDocument(webId);\n\tconst profile = profileDocument.getSubject(webId);\n\n\t// Get the root URL of the user\"s Pod:\n\tconst storage = profile.getRef(space.storage);\n\n\t// Decide at what URL within the user\"s Pod the new Document should be stored:\n\tconst routesListRef = storage + route;\n\t// Create the new Document:\n\tconst routesList = createDocument(routesListRef);\n\tawait routesList.save();\n\treturn true;\n}\nasync function insertData(webId, route, ruta) {\n\tconst profileDocument = await fetchDocument(webId);\n\tconst routeDocument = await fetchDocument(profileDocument.getSubject(webId).getRef(space.storage) + route);\n\n\tif (ruta.getInicio()) {\n\t\tfor (var i = 0; i <= ruta.getHitos().length; i++) {\n\t\t\t// Initialise the new Subject:\n\t\t\tconst newPoint = routeDocument.addSubject({\n\t\t\t\tidentifier: i,\n\t\t\t\tidentifierPrefix: \"point\"\n\t\t\t});\n\t\t\tif (i === 0) {\n\t\t\t\tif (ruta.getInicio().nombre != null) newPoint.addString(schema.name, ruta.getInicio().nombre);\n\t\t\t\tnewPoint.addDecimal(schema.latitude, ruta.getInicio()[0]);\n\t\t\t\tnewPoint.addDecimal(schema.longitude, ruta.getInicio()[1]);\n\t\t\t\tnewPoint.addInteger(\"http://arquisoft.github.io/viadeSpec/order\", i);\n\n\t\t\t} else {\n\t\t\t\tnewPoint.addString(schema.name, ruta.getHitos()[i - 1].getNombre());\n\t\t\t\tnewPoint.addDecimal(schema.latitude, ruta.getHitos()[i - 1].getLat());\n\t\t\t\tnewPoint.addDecimal(schema.longitude, ruta.getHitos()[i - 1].getLong());\n\t\t\t\tnewPoint.addInteger(\"http://arquisoft.github.io/viadeSpec/order\", i);\n\t\t\t}\n\n\t\t\tnewPoint.addRef(rdf.type, \"http://arquisoft.github.io/viadeSpec/points\");\n\t\t\tawait routeDocument.save([newPoint]);\n\t\t}\n\t}\n\n\t// Initialise the new Subject:\n\tconst newRoute = routeDocument.addSubject({\n\t\tidentifier: \"ruta\"\n\t});\n\n\t// Indicate that the Subject is a schema:TextDigitalDocument:\n\tnewRoute.addRef(rdf.type, \"http://arquisoft.github.io/viadeSpec/route\");\n\n\tnewRoute.addString(schema.name, ruta.getNombre());\n\tnewRoute.addString(schema.description, ruta.getDescripcion());\n\tnewRoute.addString(schema.identifier, ruta.getUUID());\n\tnewRoute.addRef(\"http://arquisoft.github.io/viadeSpec/points\", \"http://arquisoft.github.io/viadeSpec/points\");\n\n\tawait routeDocument.save([newRoute]);\n\treturn true;\n}\n","import { space } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nconst auth = require(\"solid-auth-client\");\nconst FC = require(\"solid-file-client\");\nconst fc = new FC(auth);\n\nexport async function getRootStorage (webId) {\n\tconst profileDocument = await fetchDocument(webId);\n\tconst profile = profileDocument.getSubject(webId);\n\n\t// Get the root URL of the user\"s Pod:\n\treturn profile.getRef(space.storage);\n}\nexport async function readFolder (route) {\n\tlet folder;\n\tawait fc\n\t\t.readFolder(route)\n\t\t.then(content => {\n\t\t\tfolder = content;\n\t\t})\n\t\t.catch(err => (folder = null));\n\treturn folder;\n}\nexport async function existsFileInFolder (route, file) {\n\tlet folder;\n\tfolder = await readFolder(route);\n\tif (folder) {\n\t\tfor (var i = 0; i < folder.files.length; i++) {\n\t\t\tif (folder.files[i].name === file) { return true; }\n\t\t}\n\t}\n\treturn false;\n}\nexport async function existsFile (fileUrl) {\n\tlet result = false;\n\tawait fc\n\t\t.readFile(fileUrl)\n\t\t.then(() => {\n\t\t\tresult = true;\n\t\t})\n\t\t.catch(err => (result = false));\n\treturn result; \n}\nexport async function moveFile (sourceURL, targetURL) {\n\tlet result = false;\n\tawait fc\n\t\t.copy(sourceURL, targetURL, { withMeta: true, withAcl: true })\n\t\t.then(() => {\n\t\t\tresult = true;\n\t\t})\n\t\t.catch(err => (result = false));\n\n\tif (result) {\n\t\tdeleteFile(sourceURL);\n\t} else { return result; }\n}\nexport async function deleteFile (sourceURL) {\n\tlet result = false;\n\tawait fc\n\t\t.delete(sourceURL)\n\t\t.then(() => {\n\t\t\tresult = true;\n\t\t})\n\t\t.catch(err => (result = false));\n\treturn result;\n}\n","class Persona {\n\tconstructor (nombre, webId, foto) {\n\t\tthis.nombre = nombre;\n\t\tthis.webId = webId;\n\t\tthis.foto = foto;\n\t}\n\n\t/*\n   * Devuelve el nombre de la persiona.\n   */\n\tgetNombre () {\n\t\treturn this.nombre;\n\t}\n\n\t/*\n   * Devuelve el webId de la persona\n   */\n\tgetWebId () {\n\t\treturn this.webId;\n\t}\n\n\t/*\n   * Devuelve la url de la foto de la persona\n   */\n\tgetFoto () {\n\t\treturn this.foto;\n\t}\n\n\ttoString () {\n\n\t}\n}\n\nexport default Persona;\n","import { fetchDocument } from \"tripledoc\";\nimport Persona from \"../../../front-end/model/Persona.js\";\n\nexport async function getPersonaByWebId (webId) {\n\tconst profileDoc = await fetchDocument(webId);\n\tvar profile = profileDoc.getSubject(webId);\n\tvar person = new Persona(profile.getString(\"http://xmlns.com/foaf/0.1/name\"), webId, profile.getRef(\"http://www.w3.org/2006/vcard/ns#hasPhoto\"));\n\treturn person;\n}\n","import { schema } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { existsFileInFolder, getRootStorage } from \"../helpers/fileHelper\";\nimport { getPersonaByWebId } from \"../helpers/personHelper\";\nimport { AccessControlList } from \"@inrupt/solid-react-components\";\nimport Ruta from \"../../../front-end/model/Ruta.js\";\nimport Comentario from \"../../../front-end/model/Comentario.js\";\n\nexport async function readRouteFromUrl (url) {\n\tlet routeDoc;\n\tlet ruta = null;\n\tawait fetchDocument(url)\n\t\t.then(content => {\n\t\t\trouteDoc = content;\n\t\t})\n\t\t.catch(err => (routeDoc = null));\n\n\tif (routeDoc != null) {\n\t\ttry {\n\t\t\tconst route = routeDoc.getSubject(\"#ruta\");\n\n\t\t\tvar puntos = routeDoc.getSubjectsOfType(\n\t\t\t\t\"http://arquisoft.github.io/viadeSpec/points\"\n\t\t\t);\n\t\t\truta = new Ruta(\n\t\t\t\troute.getString(schema.name),\n\t\t\t\t[\n\t\t\t\t\tpuntos[0].getDecimal(schema.latitude),\n\t\t\t\t\tpuntos[0].getDecimal(schema.longitude)\n\t\t\t\t],\n\t\t\t\troute.getString(schema.description)\n\t\t\t);\n\t\t\truta.setUUID(route.getString(schema.identifier));\n      \n\t\t\tvar hitos=[];\n\n\t\t\tfor (var e = 1; e < puntos.length; e++) {\n\t\t\t\thitos.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tnombre: puntos[parseInt(e)].getString(schema.name),\n\t\t\t\t\t\tlatitud: puntos[parseInt(e)].getDecimal(schema.latitude),\n\t\t\t\t\t\tlongitud: puntos[parseInt(e)].getDecimal(schema.longitude),\n\t\t\t\t\t\torden: puntos[e].getInteger(\"http://arquisoft.github.io/viadeSpec/order\")\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t//Ordenamos los puntos\n\t\t\thitos = hitos.sort(sortByOrder);\n\n\t\t\truta.setHitos(hitos);\n\n\n\t\t\tconst comentarios = routeDoc.getSubjectsOfType(\n\t\t\t\t\"http://arquisoft.github.io/viadeSpec/userComment\"\n\t\t\t);\n\t\t\tfor (let i = 0; i < comentarios.length; i++) {\n\t\t\t\tconst comentario = new Comentario(comentarios[i].getDateTime(schema.datePublished), comentarios[i].getString(schema.text));\n\t\t\t\tconst autor = await getPersonaByWebId(comentarios[i].getRef(schema.author));\n\t\t\t\tcomentario.setAutor(autor);\n\t\t\t\truta.addComentario(comentario);\n\t\t\t}\n\t\t\tconst ficheros = routeDoc.getSubjectsOfType(schema.MediaObject);\n\t\t\tfor (let i = 0; i < ficheros.length; i++) {\n\t\t\t\tconst fichero = ficheros[i].getRef(schema.contentUrl);\n\t\t\t\truta.addFichero(fichero);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn ruta;\n}\nfunction sortByOrder(a, b) {\n\treturn a.orden - b.orden;\n}\nexport async function findRouteURL (authorWebId, uuid) {\n\tconst storage = await getRootStorage(authorWebId);\n\tlet routeDoc;\n\tlet routeURL = null;\n\tawait fetchDocument(storage + \"private/viade_es5b/routes/\" + uuid + \".ttl\").then((content) => {\n\t\trouteDoc = content;\n\t})\n\t\t.catch(err => routeDoc = null);\n\n\tif (routeDoc != null) {\n\t\tvar route = routeDoc.getSubject(\"#ruta\");\n\t\tvar ID = route.getString(schema.identifier);\n\t\tif (ID === uuid) {\n\t\t\trouteURL = storage + \"private/viade_es5b/routes/\" + uuid + \".ttl\";\n\t\t}\n\t}\n\treturn routeURL;\n}\nexport async function getSharedRouteFriends (storage, routeUUID) {\n\tvar result = [];\n\tvar exists = await existsFileInFolder(storage + \"private/viade_es5b\", \"mySharedRoutes.ttl\");\n\tif (exists) {\n\t\tconst mySharedRoutesDocument = await fetchDocument(storage + \"private/viade_es5b/mySharedRoutes.ttl\");\n\n\t\tconst rutas = mySharedRoutesDocument.getAllSubjectsOfType(\"http://arquisoft.github.io/viadeSpec/route\");\n\t\tfor (var e = 0; e < rutas.length; e++) {\n\t\t\t// Miro a ver si estoy compartiendo esta ruta\n\t\t\tif (rutas[e].getLiteral(schema.identifier) === routeUUID) {\n\t\t\t\t// Si la estoy compartiendo entonces saco los amigos con los que la comparto\n\t\t\t\tconst amigos = rutas[parseInt(e)].getAllRefs(schema.agent);\n\t\t\t\tfor (var i = 0; i < amigos.length; i++) {\n\t\t\t\t\t// los añado a result\n\t\t\t\t\t//elimino simbolos redundantes como doble barra (darian problemas para permisos)\n\t\t\t\t\tlet amigo = amigos[i].replace(/([^:]\\/)\\/+/g, \"$1\");\n\t\t\t\t\tresult = [...result, amigo];\n\t\t\t\t}\n\t\t\t\t// Ya encontre lo que busco asi que salgo\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n//Actualizo los permisos de la ruta\nexport async function updateRoutePermissions(webId,routeUUID)\n{\n\tvar storage =  await getRootStorage(webId);\n\n\t//Busco con quien la tengo compartida y actualizo los permisos\n\tvar friends = await getSharedRouteFriends(storage,routeUUID);\n\tvar filePath=storage + \"private/viade_es5b/routes/\" + routeUUID + \".ttl\";\n\n\ttry {\n\t\t//Permisos a añadir\n\t\tconst permissions = [\n\t\t\t{\n\t\t\t\tagents: friends,\n\t\t\t\tmodes: [AccessControlList.MODES.APPEND,AccessControlList.MODES.READ]\n\t\t\t}\n\t\t];\n\t\t//Si existe el fichero lo sobrescribe\n\t\tconst ACLFile = new AccessControlList(webId,filePath,filePath + \".acl\");\n\t\tawait ACLFile.createACL(permissions);\n\t} catch (error) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","import { space } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { readFolder } from \"./helpers/fileHelper\";\nimport { readRouteFromUrl } from \"./helpers/routeHelper\";\nconst auth = require(\"solid-auth-client\");\n\nexport async function listRoutes () {\n\tconst session = await auth.currentSession();\n\tif (!session) {\n\t\twindow.location.href = \"/login\";\n\t}\n\n\tconst profileDocument = await fetchDocument(session.webId);\n\tconst profile = profileDocument.getSubject(session.webId);\n\n\t// Get the root URL of the user\"s Pod:\n\tconst storage = profile.getRef(space.storage);\n\tvar result = [];\n\n\tresult = await readRoutes(storage + \"private/viade_es5b/routes/\");\n\n\treturn result;\n}\nasync function readRoutes (folderRoute) {\n\tconst folder = await readFolder(folderRoute);\n\tvar result = [];\n\tif (folder) {\n\t\tfor (var i = 0; i < folder.files.length; i++) {\n\t\t\tconst ruta = await readRouteFromUrl(folder.files[i].url);\n\t\t\tif (ruta != null) { result = [...result, ruta]; }\n\t\t}\n\t}\n\treturn result;\n}\n","import { fetchDocument } from \"tripledoc\";\nimport { ldp } from \"rdf-namespaces\";\nconst request = require(\"request\");\n\nexport async function getInboxUrl (webId) {\n\tlet profileDoc;\n\tawait fetchDocument(webId)\n\t\t.then(content => {\n\t\t\tprofileDoc = content;\n\t\t})\n\t\t.catch(err => (profileDoc = null));\n\tif (profileDoc !== null) {\n\t\tvar profile = profileDoc.getSubject(\"#me\");\n\t\tif (profile !== null) {\n\t\t\tvar url = profile.getRef(ldp.inbox);\n\t\t\treturn url;\n\t\t}\n\t}\n\treturn null;\n}\n\n// Devuelve true si logro mandar la notificacion, false si no\nexport async function sendNotification (webId, targetWebId, type) {\n\tvar inbox = await getInboxUrl(targetWebId);\n\trequest({\n\t\tmethod: \"POST\",\n\t\turi: inbox,\n\t\tbody: `@prefix as: <https://www.w3.org/ns/activitystreams#> .\n          @prefix schema: <http://schema.org/> .\n          <> a as:${type} ;\n          schema:agent <${webId}> .`,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"text/turtle\"\n\t\t}\n\t},\n\tfunction (error, response, body) {\n\t\tif (error) { return false; } else {\n\t\t\treturn true;\n\t\t}\n\t});\n}\n// Devuelve true si logro mandar la notificacion, false si no\nexport async function sendNotificationBody (webId, targetWebId, body) {\n\tvar inbox = await getInboxUrl(targetWebId);\n\tawait request({\n\t\tmethod: \"POST\",\n\t\turi: inbox,\n\t\tbody: body,\n\t\theaders: {\n\t\t\t\"Content-Type\": \"text/turtle\"\n\t\t}\n\t},\n\tfunction (error, response, body) {\n\t\tif (error) { return false; } else {\n\t\t\treturn true;\n\t\t}\n\t});\n}\n\n// devuelve todos los documentos en la bandeja de entrada del usuario\nexport async function getNotificationDocuments (webId) {\n\tvar inbox = await getInboxUrl(webId);\n\n\tvar containerDoc = await fetchDocument(inbox);\n\tif (containerDoc) {\n\t\tvar containerSub = containerDoc.getSubject(inbox);\n\t\tvar containerItemUrls = containerSub.getAllRefs(ldp.contains);\n\t\tvar result = [];\n\t\tfor (var i = 0; i < containerItemUrls.length; i++) {\n\t\t\ttry {\n\t\t\t\tvar doc = await fetchDocument(containerItemUrls[parseInt(i)]);\n\t\t\t\tif (doc) {\n\t\t\t\t\tresult = [...result, doc];\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\treturn [];\n}\n","import { findRouteURL, getSharedRouteFriends } from \"./helpers/routeHelper\";\nimport { getRootStorage } from \"./helpers/fileHelper\";\nimport { listRoutes } from \"./listRoutes\";\nimport { fetchDocument } from \"tripledoc\";\nimport { schema } from \"rdf-namespaces\";\nimport { sendNotificationBody } from \"./helpers/notificationHelper\";\n\nconst auth = require(\"solid-auth-client\");\nconst FC = require(\"solid-file-client\");\nconst fc = new FC(auth);\n\nexport async function deleteRoute(uuid, routeName) {\n  var result = [];\n  const session = await auth.currentSession();\n  if (!session) {\n    window.location.href = \"/login\";\n  }\n  const storage = await getRootStorage(session.webId);\n  let url = await findRouteURL(session.webId, uuid);\n  if (url !== null) {\n    // Busco a los amigos con los que la tengo compartida\n    var friends = await getSharedRouteFriends(storage, uuid);\n    //Si la tengo compartida con algun amigo\n    if (friends.length > 0) {\n      // quito todas las referencias a la ruta\n      await deleteFromSharedRoutes(storage, uuid);\n      // mando mensajes de actualizacion de que se elimino la ruta\n      for (let i = 0; i < friends.length; i++) {\n        await sendRouteDeletedNotification(\n          session.webId,\n          friends[i],\n          uuid,\n          routeName\n        );\n      }\n    }\n    // Borro los ficheros asociados a la ruta (que sean mios)\n    await deleteFilesFromRoute(session.webId, url);\n    // Borro el fichero de la ruta\n    await fc.delete(url);\n    result = await listRoutes();\n  }\n  return result;\n}\n\nasync function deleteFromSharedRoutes(storage, routeUUID) {\n  const route = \"private/viade_es5b/mySharedRoutes.ttl\";\n  const mySharedRoutesDocument = await fetchDocument(storage + route);\n  const rutas = mySharedRoutesDocument.getAllSubjectsOfType(\n    \"http://arquisoft.github.io/viadeSpec/route\"\n  );\n  for (var e = 0; e < rutas.length; e++) {\n    // Donde encuentre esta ruta la elimino\n    if (rutas[parseInt(e)].getLiteral(schema.identifier) === routeUUID) {\n      mySharedRoutesDocument.removeSubject(rutas[e].asRef());\n    }\n  }\n  await mySharedRoutesDocument.save();\n}\n//\n\nasync function deleteFilesFromRoute(webId, url) {\n  const mySharedRoutesDocument = await fetchDocument(url);\n  const rutas = mySharedRoutesDocument.getAllSubjectsOfType(schema.MediaObject);\n  for (var e = 0; e < rutas.length; e++) {\n    // Elimino los ficheros de los que sea dueño\n    if (rutas[parseInt(e)].getRef(schema.author) === webId) {\n      fc.delete(rutas[e].getRef(schema.contentUrl));\n    }\n  }\n}\nasync function sendRouteDeletedNotification(\n  webId,\n  friendWebId,\n  routeUUID,\n  routeName\n) {\n  return sendNotificationBody(\n    webId,\n    friendWebId,\n    `@prefix as: <https://www.w3.org/ns/activitystreams#> .\n    @prefix schema: <http://schema.org/> .\n    <> a as:Follow ;\n    schema:agent <${webId}> ;\n    schema:Action \"deleteRoute\" ;\n    schema:comment \"${routeName}\" ;\n    schema:identifier \"${routeUUID}\" .\n    `\n  );\n}\n","import { fetchDocument } from \"tripledoc\";\nimport { getPersonaByWebId } from \"./helpers/personHelper\";\n\nconst auth = require(\"solid-auth-client\");\n\nexport async function listFriends () {\n\tvar result = [];\n\n\tconst session = await auth.currentSession();\n\tif (!session) {\n\t\twindow.location.href = \"/login\";\n\t}\n\n\tconst profileDoc = await fetchDocument(session.webId);\n\n\tvar friendWebIds = profileDoc.getSubject(session.webId).getAllNodeRefs(\"http://xmlns.com/foaf/0.1/knows\");\n\tfor (var i = 0; i < friendWebIds.length; i++) {\n\t\tvar friend = await getPersonaByWebId(friendWebIds[i]);\n\t\tresult = [...result, friend];\n\t}\n\treturn result;\n}\n","import { rdf } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nconst auth = require(\"solid-auth-client\");\n\n// Añade el usuario a amigos, si logra añadirlo devuelve true sino false.\nexport async function addFriend(friendWebId) {\n  const session = await auth.currentSession();\n  if (!session) {\n    window.location.href = \"/login\";\n  }\n\n  const webId = session.webId;\n  // Compruebo si ya es mi amigo, si no lo es lo añado (y si no soy yo mismo)\n  var friend = false;\n  var result = false;\n  const profileDoc = await fetchDocument(webId);\n  const profile = profileDoc.getSubject(webId);\n  var friends = profile.getAllNodeRefs(\"http://xmlns.com/foaf/0.1/knows\");\n  for (var i = 0; i < friends.length; i += 1) {\n    if (friends[i] === friendWebId) {\n      friend = true;\n    }\n  }\n  // Si no es amigo lo añado\n  if ((await isValidProfile(friendWebId)) && !friend && friendWebId !== webId) {\n    await insertData(webId, friendWebId);\n    result = true;\n  }\n  return result;\n}\n\n// https://unhosted.org/using-solid/\n// https://codesandbox.io/s/peaceful-payne-su5t6?fontsize=14\nasync function insertData(webId, friendWebId) {\n  const profileDocument = await fetchDocument(webId);\n\n  // Inicializamos un Subject Persona:\n  const newFriend = profileDocument.addSubject({\n    identifier: friendWebId,\n  });\n  // Indicamos que el Subject es Una Persona\n  newFriend.addRef(rdf.type, \"http://xmlns.com/foaf/0.1/person\");\n\n  // Le añadimos con su alias\n  // newFriend.addString(\"http://xmlns.com/foaf/0.1/label\", alias);\n\n  // Añadimos un nuevo Subject de que Conocemos a la Persona (es amigo)\n  const newKnown = profileDocument.addSubject({\n    identifier: \"me\",\n  });\n\n  newKnown.addRef(\"http://xmlns.com/foaf/0.1/knows\", friendWebId);\n\n  await profileDocument.save([newFriend, newKnown]);\n}\n\n// Si puedo acceder a su perfil y tiene un nombre, es amigo válido\nasync function isValidProfile(friendWebId) {\n  var isValid = false;\n  let profileDoc;\n  await fetchDocument(friendWebId)\n    .then((content) => {\n      profileDoc = content;\n    })\n    .catch((err) => (profileDoc = null));\n  if (profileDoc !== null) {\n    var profile = profileDoc.getSubject(friendWebId);\n    if (profile !== null) {\n      var name = profile.getString(\"http://xmlns.com/foaf/0.1/name\");\n      if (name !== null && name !== \"\") {\n        isValid = true;\n      }\n    }\n  }\n  return isValid;\n}\n","import { rdf, space, schema } from \"rdf-namespaces\";\nimport { fetchDocument, createDocument } from \"tripledoc\";\nimport { existsFileInFolder } from \"./helpers/fileHelper\";\n\nconst auth = require(\"solid-auth-client\");\n\n// agrego la ruta que le he compartido a alguien y a quien se la he compartido\n// a un fichero de rutas compartidas, para saber con quienes la he compartido y si la habia\n// compartido con ellos previamente.\n\n// me devuelve false si hubo algun problema o la combinacion persona/ruta esta repetida\nexport async function addToMySharedRoutes (friendWebId, routeUUID) {\n\tconst session = await auth.currentSession();\n\tif (!session) { window.location.href = \"/login\"; }\n\tconst route = \"private/viade_es5b/mySharedRoutes.ttl\";\n\tconst webId = session.webId;\n\n\tconst profileDocument = await fetchDocument(webId);\n\tconst profile = profileDocument.getSubject(webId);\n\n\t// Get the root URL of the user\"s Pod:\n\tconst storage = profile.getRef(space.storage);\n\n\tvar exists = await existsFileInFolder(storage + \"private/viade_es5b\", \"mySharedRoutes.ttl\");\n\t// si no existe el documento lo creo\n\tif (!exists) { await newDocument(storage + route); }\n\t// agrego la ruta y con quien la he compartido\n\treturn await insertData(storage + route, friendWebId, routeUUID);\n}\nasync function newDocument (route) {\n\t// Create the new Document:\n\tconst mySharedRoutesDocument = createDocument(route);\n\tawait mySharedRoutesDocument.save();\n}\nasync function insertData (route, friend, routeUUID) {\n\tvar result = true;\n\tconst mySharedRoutesDocument = await fetchDocument(route);\n\n\tlet ruta = null;\n\tconst rutas = mySharedRoutesDocument.getAllSubjectsOfType(\"http://arquisoft.github.io/viadeSpec/route\");\n\tfor (var e = 0; e < rutas.length; e++) {\n\t\t// Si ya existe un subject con el identificador de la ruta, entonces uso ese\n\t\tif (rutas[parseInt(e)].getLiteral(schema.identifier) === routeUUID) {\n\t\t\truta = rutas[e];\n\t\t\t// compruevo que no este el amigo aqui ya metido\n\t\t\tconst amigos = rutas[e].getAllRefs(schema.agent);\n\t\t\tfor (var i = 0; i < amigos.length; i++) {\n\t\t\t\t// esta repetido si lo encuentro\n\t\t\t\tif (amigos[i] === friend) {\n\t\t\t\t\tresult = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\t// Si no la encontro creo un nuevo subject. sino uso el que encontro\n\tif (ruta === null) {\n\t\truta = mySharedRoutesDocument.addSubject();\n\t\truta.addLiteral(schema.identifier, routeUUID);\n\t\truta.addRef(rdf.type, \"http://arquisoft.github.io/viadeSpec/route\");\n\t}\n\tif (result) {\n\t\truta.addRef(schema.agent, friend);\n\t\tawait mySharedRoutesDocument.save([ruta]);\n\t}\n\treturn result;\n}\n","import { sendNotificationBody } from \"./helpers/notificationHelper\";\nimport { updateRoutePermissions } from \"./helpers/routeHelper\";\nimport { addToMySharedRoutes } from \"./addToMySharedRoutes\";\n\n\n\n\n\nconst auth = require(\"solid-auth-client\");\n\n// Envia al usuario un mensaje con la direccion de la ruta a compartir que se guardara en su inbox\n// Luego, si logre mandarlo, añado los permisos de posteo en la ruta.\n// si logro compartirla devuelvo true sino false.\n\nexport async function shareRoute (friendWebId, routeUUID) {\n\tvar result = false;\n\tconst session = await auth.currentSession();\n\tif (!session) { window.location.href = \"/login\"; }\n\n\t// Añado a rutas compartidas\n\t// Si no estaba compartido ya continuo\n\tif (await addToMySharedRoutes(friendWebId, routeUUID)) {\n\t\t// mando notificacion\n\t\tawait sendShareInvitation(session.webId, friendWebId, routeUUID);\n\t\t// añado permisos para el amigo\n\t\tawait updateRoutePermissions(session.webId,routeUUID);\n\t}\n\treturn result;\n}\nasync function sendShareInvitation (webId, friendWebId, routeUUID) {\n\treturn sendNotificationBody(webId, friendWebId,\n\t\t`@prefix as: <https://www.w3.org/ns/activitystreams#> .\n    @prefix schema: <http://schema.org/> .\n    <> a as:Follow ;\n    schema:agent <${webId}> ;\n    schema:Action \"shareRoute\" ;\n    schema:identifier \"${routeUUID}\" .\n    `);\n}\n","import { rdf, space, schema } from \"rdf-namespaces\";\nimport { fetchDocument, createDocument } from \"tripledoc\";\nimport { existsFileInFolder } from \"./helpers/fileHelper\";\n\nconst auth = require(\"solid-auth-client\");\n\nexport async function addSharedRoute (friendWebId, routeUrl, routeUUID) {\n\tvar result = false;\n\tconst session = await auth.currentSession();\n\tif (!session) { window.location.href = \"/login\"; }\n\tconst route = \"private/viade_es5b/friendSharedRoutes.ttl\";\n\tconst webId = session.webId;\n\n\tconst profileDocument = await fetchDocument(webId);\n\tconst profile = profileDocument.getSubject(webId);\n\n\t// Get the root URL of the user\"s Pod:\n\tconst storage = profile.getRef(space.storage);\n\n\tvar exists = await existsFileInFolder(storage + \"private/viade_es5b\", \"friendSharedRoutes.ttl\");\n\t// si no existe el documento lo creo\n\tif (!exists) { await newDocument(storage + route); }\n\t// agrego la ruta y quien me lo compartio al fichero\n\tresult = await insertData(storage + route, friendWebId, routeUrl, routeUUID);\n\treturn result;\n}\nasync function newDocument (route) {\n\t// Create the new Document:\n\tconst sharedRoutesDocument = createDocument(route);\n\tawait sharedRoutesDocument.save();\n}\nasync function insertData (route, friend, routeUrl, routeUUID) {\n\tconst sharedRoutesDocument = await fetchDocument(route);\n\t// Compruebo si esta repetida, si lo esta no hago nada\n\tvar repeated = false;\n\tconst rutas = sharedRoutesDocument.getAllSubjectsOfType(\"http://arquisoft.github.io/viadeSpec/route\");\n\tfor (var e = 0; e < rutas.length; e++) {\n\t\tif (rutas[e].getRef(schema.url) === routeUrl) {\n\t\t\trepeated = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (!repeated) {\n\t\t// Initialise the new Subject:\n\t\tconst newShare = sharedRoutesDocument.addSubject();\n\n\t\tnewShare.addRef(schema.agent, friend);\n\t\tnewShare.addRef(schema.url, routeUrl);\n\t\tnewShare.addString(schema.identifier, routeUUID);\n\t\tnewShare.addRef(rdf.type, \"http://arquisoft.github.io/viadeSpec/route\");\n\n\t\tawait sharedRoutesDocument.save([newShare]);\n\t\treturn true;\n\t}\n\treturn false;\n}\n","import { space, schema } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { existsFileInFolder } from \"./helpers/fileHelper\";\n\nconst auth = require(\"solid-auth-client\");\n\nexport async function deleteFromfriendSharedRoutes (friendWebId, routeUUID) {\n\tvar result = false;\n\tconst session = await auth.currentSession();\n\tif (!session) { window.location.href = \"/login\"; }\n\tconst route = \"private/viade_es5b/friendSharedRoutes.ttl\";\n\tconst webId = session.webId;\n\n\tconst profileDocument = await fetchDocument(webId);\n\tconst profile = profileDocument.getSubject(webId);\n\n\t// Get the root URL of the user\"s Pod:\n\tconst storage = profile.getRef(space.storage);\n\n\tvar exists = await existsFileInFolder(storage + \"private/viade_es5b\", \"friendSharedRoutes.ttl\");\n\tif (exists) {\n\t\t// Borro los datos de la ruta\n\t\tconst friendSharedRoutesDocument = await fetchDocument(storage + route);\n\t\tconst rutas = friendSharedRoutesDocument.getAllSubjectsOfType(\"http://arquisoft.github.io/viadeSpec/route\");\n\t\tfor (var e = 0; e < rutas.length; e++) {\n\t\t\t// Donde encuentre esta ruta la elimino\n\t\t\tif (rutas[e].getLiteral(schema.identifier) === routeUUID && rutas[e].getRef(schema.agent) === friendWebId) {\n\t\t\t\tfriendSharedRoutesDocument.removeSubject(rutas[e].asRef());\n\t\t\t}\n\t\t}\n\t\tawait friendSharedRoutesDocument.save();\n\t}\n\treturn result;\n}\n","class Notificacion {\n\tconstructor (titulo, mensaje, tipo) {\n\t\tthis.titulo = titulo;\n\t\tthis.mensaje = mensaje;\n\t\tthis.tipo = tipo;\n\t}\n\n\tgetTitulo () {\n\t\treturn this.titulo;\n\t}\n\n\tsetTitulo (titulo) {\n\t\tthis.titulo = titulo;\n\t}\n\n\tgetMensaje () {\n\t\treturn this.mensaje;\n\t}\n\n\tsetMensaje (mensaje) {\n\t\tthis.mensaje = mensaje;\n\t}\n\tgetTipo () {\n\t\treturn this.tipo;\n\t}\n\n\tsetTipo (tipo) {\n\t\tthis.tipo = tipo;\n\t}\n\n\ttoString () {\n\n\t}\n}\n\nexport default Notificacion;\n","import { getNotificationDocuments } from \"./helpers/notificationHelper\";\nimport { schema } from \"rdf-namespaces\";\nimport { findRouteURL, readRouteFromUrl } from \"./helpers/routeHelper\";\nimport { deleteFile } from \"./helpers/fileHelper\";\nimport { addSharedRoute } from \"./addSharedRoute\";\nimport { deleteFromfriendSharedRoutes } from \"./deleteFromfriendSharedRoutes\";\n\nimport { getPersonaByWebId } from \"./helpers/personHelper\";\n\nimport Notificacion from \"../../front-end/model/Notificacion.js\";\n\nconst auth = require(\"solid-auth-client\");\n\n// Comprueba todos los mensajes del usuario, busca los que sean del tipo ruta compartida\n// añade esas rutas compartidas al fichero de compartidas\n// dicho fichero contendra <uuid ruta> <perfil amigo>\n// devuelve la ruta y el amigo que la compartio contigo\n\nexport async function processSharedRoutes () {\n\tconst session = await auth.currentSession();\n\tvar result = [];\n\tif (session) {\n\t\tconst documents = await getNotificationDocuments(session.webId);\n\t\tif (documents.length > 0) {\n\t\t\tfor (let i = 0; i < documents.length; i++) {\n\t\t\t\tvar message = documents[i].getSubject(\"\");\n\t\t\t\tvar action = message.getString(schema.action);\n\t\t\t\t/// Si es del tipo shareRoute es que quiere compartir una ruta con nosotros\n\t\t\t\tif (action === \"shareRoute\") {\n\t\t\t\t\t// Comprobamos si existe de verdad la ruta, si existe\n\t\t\t\t\t// continuamos\n\t\t\t\t\tconst friendWebId = message.getRef(schema.agent);\n\t\t\t\t\tconst routeUrl = await findRouteURL(friendWebId, message.getString(schema.identifier));\n\t\t\t\t\tif (routeUrl !== null) {\n\t\t\t\t\t\t// Si lo encontro entonces insertamos en el apartado de rutas compartidas y borramos el mensaje\n\t\t\t\t\t\tawait addSharedRoute(friendWebId, routeUrl, message.getString(schema.identifier));\n\t\t\t\t\t\t// Añadimos al resultado una nueva notificacion\n\t\t\t\t\t\tconst ruta = await readRouteFromUrl(routeUrl);\n\t\t\t\t\t\tconst persona = await getPersonaByWebId(friendWebId);\n\t\t\t\t\t\tresult = [...result, new Notificacion(persona.getNombre() + \" te ha Compartido una ruta!\", \"Ruta : \" + ruta.getNombre(),\"success\")];\n\t\t\t\t\t}\n\t\t\t\t\t// borramos la notificacion\n\t\t\t\t\tawait deleteFile(documents[i].asRef());\n\t\t\t\t}\n\t\t\t\t// Si es del tipo commentRoute es que alguien ha comentado en una ruta compartida\n\t\t\t\tif (action === \"commentRoute\") {\n\t\t\t\t\t// Comprobamos si existe la ruta, si existe\n\t\t\t\t\t// continuamos\n\t\t\t\t\tconst friendWebId = message.getRef(schema.agent);\n\n\t\t\t\t\tconst ruta = await readRouteFromUrl(message.getRef(schema.identifier));\n\t\t\t\t\tif (ruta !== null) {\n\t\t\t\t\t\t// Si la encontro entonces mostramos una notificacion al usuario\n\t\t\t\t\t\tconst persona = await getPersonaByWebId(friendWebId);\n\t\t\t\t\t\tresult = [...result, new Notificacion(persona.getNombre() + \" ha comentado\", \"En \" + ruta.getNombre() + \": \" + message.getString(schema.comment),\"info\")];\n\t\t\t\t\t}\n\t\t\t\t\t// borramos la notificacion\n\t\t\t\t\tawait deleteFile(documents[i].asRef());\n\t\t\t\t}\n\t\t\t\t// Si es del tipo mediaRoute es que alguien ha subido un fichero en una ruta compartida\n\t\t\t\tif (action === \"mediaRoute\") {\n\t\t\t\t\t// Comprobamos si existe de verdad la ruta, si existe\n\t\t\t\t\t// continuamos\n\t\t\t\t\tconst friendWebId = message.getRef(schema.agent);\n\n\t\t\t\t\tconst ruta = await readRouteFromUrl(message.getRef(schema.identifier));\n\t\t\t\t\tif (ruta !== null) {\n\t\t\t\t\t\t// Si la encontro entonces mostramos una notificacion al usuario\n\t\t\t\t\t\tconst persona = await getPersonaByWebId(friendWebId);\n\t\t\t\t\t\tresult = [...result, new Notificacion(persona.getNombre() + \" subio un archivo\", \"En \" + ruta.getNombre() + \": \" + message.getString(schema.MediaObject),\"info\")];\n\t\t\t\t\t}\n\t\t\t\t\t// borramos la notificacion\n\t\t\t\t\tawait deleteFile(documents[i].asRef());\n\t\t\t\t}\n\t\t\t\tif (action === \"deleteRoute\") {\n\t\t\t\t\t// Eliminamos la ruta de rutas compartidas conmigo\n\t\t\t\t\tawait deleteFromfriendSharedRoutes(message.getRef(schema.agent), message.getString(schema.identifier));\n\t\t\t\t\t// Mostramos que se borro la ruta\n\t\t\t\t\tconst persona = await getPersonaByWebId(message.getRef(schema.agent));\n\t\t\t\t\tresult = [...result, new Notificacion(persona.getNombre() + \" Ha borrado la ruta\", \"Ruta : \" + message.getString(schema.comment),\"danger\")];\n\t\t\t\t\t// borramos la notificacion\n\t\t\t\t\tawait deleteFile(documents[i].asRef());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n","class RutaAmigo {\n\tconstructor (ruta, persona) {\n\t\tthis.ruta = ruta;\n\t\tthis.amigo = persona;\n\t}\n\n\t/*\n   * Devuelve el amigo\n   */\n\tgetAmigo () {\n\t\treturn this.amigo;\n\t}\n\n\t/*\n   * Devuelve la ruta\n   */\n\tgetRuta () {\n\t\treturn this.ruta;\n\t}\n}\n\nexport default RutaAmigo;\n","import { space, schema } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { existsFileInFolder } from \"./helpers/fileHelper\";\nimport { getPersonaByWebId } from \"./helpers/personHelper\";\nimport { readRouteFromUrl } from \"./helpers/routeHelper\";\n\nimport RutaAmigo from \"../../front-end/model/RutaAmigo.js\";\n\nconst auth = require(\"solid-auth-client\");\n\nexport async function listSharedRoutes () {\n\tconst session = await auth.currentSession();\n\tif (!session) {\n\t\twindow.location.href = \"/login\";\n\t}\n\n\tconst profileDocument = await fetchDocument(session.webId);\n\tconst profile = profileDocument.getSubject(session.webId);\n\n\t// Get the root URL of the user\"s Pod:\n\tconst storage = profile.getRef(space.storage);\n\tvar result = [];\n\t// Leemos las rutas del documento de compartidas si existe el documento\n\tif (await existsFileInFolder(storage + \"private/viade_es5b\", \"friendSharedRoutes.ttl\")) {\n\t\tconst sharedRoutesDocument = await fetchDocument(storage + \"private/viade_es5b/friendSharedRoutes.ttl\");\n\t\tif (sharedRoutesDocument != null) {\n\t\t\tconst rutas = sharedRoutesDocument.getAllSubjectsOfType(\"http://arquisoft.github.io/viadeSpec/route\");\n\n\t\t\t// ya tengo todas las url\n\t\t\tfor (var e = 0; e < rutas.length; e++) {\n\t\t\t\tvar routeUrl = rutas[e].getRef(schema.url);\n\t\t\t\tvar friendWebId = rutas[e].getRef(schema.agent);\n\t\t\t\t// comprobamos que existan las rutas, si existen las añadimos al resultado\n\t\t\t\tvar route = await readRouteFromUrl(routeUrl);\n\t\t\t\tvar person = await getPersonaByWebId(friendWebId);\n\t\t\t\tif (route !== null && person !== null) {\n\t\t\t\t\tresult = [...result, new RutaAmigo(route, person)];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n","import { rdf, schema } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { findRouteURL, getSharedRouteFriends } from \"./helpers/routeHelper\";\nimport { getRootStorage } from \"./helpers/fileHelper\";\nimport { sendNotificationBody } from \"./helpers/notificationHelper\";\n\nconst auth = require(\"solid-auth-client\");\n\n// Devuelve true si logro insertar el comentario\nexport async function addCommentToRoute(\n  comentario,\n  routeUUID,\n  routeOwnerWebID\n) {\n  var result = false;\n  const session = await auth.currentSession();\n  if (!session) {\n    window.location.href = \"/login\";\n  }\n  const webId = session.webId;\n  if (routeOwnerWebID === null) routeOwnerWebID = webId;\n\n  const storage = await getRootStorage(routeOwnerWebID);\n\n  let url = await findRouteURL(routeOwnerWebID, routeUUID);\n  // Si la encuentro entonces inserto el comentario y notifico al dueño de la ruta\n  if (url !== null) {\n    result = await insertData(comentario, url, webId);\n    if (result) {\n      //Si soy el dueño de la ruta mando un comentario a todos\n      if (webId === routeOwnerWebID) {\n        // Busco a que amigos mandar la circular y las mando\n        var friends = await getSharedRouteFriends(storage, routeUUID);\n        for (let i = 0; i < friends.length; i++) {\n          await sendCommentNotification(webId, friends[i], url, comentario);\n        }\n      }\n      //sino le mando un mensaje al dueño de la ruta\n      else {\n        await sendCommentNotification(webId, routeOwnerWebID, url, comentario);\n      }\n    }\n  }\n  return result;\n}\n\nasync function insertData(comentario, routeUrl, myWebId) {\n  const routeDocument = await fetchDocument(routeUrl);\n  // Initialise the new Subject:\n  const newComment = routeDocument.addSubject();\n\n  newComment.addString(schema.text, comentario.getTexto());\n  newComment.addDateTime(schema.datePublished, comentario.getFecha());\n  newComment.addRef(schema.author, myWebId);\n  newComment.addRef(\n    rdf.type,\n    \"http://arquisoft.github.io/viadeSpec/userComment\"\n  );\n\n  const success = await routeDocument.save([newComment]);\n  return success !== null;\n}\n\nasync function sendCommentNotification(\n  webId,\n  friendWebId,\n  routeUrl,\n  comentario\n) {\n  return sendNotificationBody(\n    webId,\n    friendWebId,\n    `@prefix as: <https://www.w3.org/ns/activitystreams#> .\n    @prefix schema: <http://schema.org/> .\n    <> a as:Follow ;\n    schema:agent <${webId}> ;\n    schema:Action \"commentRoute\" ;\n    schema:comment \"${comentario.getTexto()}\" ;\n    schema:identifier <${routeUrl}> .\n    `\n  );\n}\n","import { schema } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { findRouteURL } from \"./helpers/routeHelper\";\nimport { getPersonaByWebId } from \"./helpers/personHelper\";\n\nimport Comentario from \"../../front-end/model/Comentario.js\";\n\nconst auth = require(\"solid-auth-client\");\n\nexport async function listCommentsOfRoute (routeUUID, authorWebId) {\n\tvar result = [];\n\tlet session = null;\n\tsession = await auth.currentSession();\n\n\tif (!session) {\n\t\twindow.location.href = \"/login\";\n\t}\n\n\tlet url = await findRouteURL(authorWebId == null ? session.webId : authorWebId, routeUUID);\n\t// Si la encuentro entonces busco los comentarios\n\tif (url !== null) {\n\t\tconst routeDoc = await fetchDocument(url);\n\t\tconst comentarios = routeDoc.getSubjectsOfType(\n\t\t\t\"http://arquisoft.github.io/viadeSpec/userComment\"\n\t\t);\n\t\tfor (var i = 0; i < comentarios.length; i++) {\n\t\t\tconst comentario = new Comentario(\n\t\t\t\tcomentarios[i].getDateTime(schema.datePublished),\n\t\t\t\tcomentarios[i].getString(schema.text)\n\t\t\t);\n\t\t\tconst autor = await getPersonaByWebId(comentarios[i].getRef(schema.author));\n\t\t\tcomentario.setAutor(autor);\n\t\t\tresult = [...result, comentario];\n\t\t}\n\t}\n\treturn result;\n}\n","import { rdf, schema } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { findRouteURL, getSharedRouteFriends } from \"./helpers/routeHelper\";\nimport { getRootStorage } from \"./helpers/fileHelper\";\nimport { sendNotificationBody } from \"./helpers/notificationHelper\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst auth = require(\"solid-auth-client\");\n\nexport async function addMediaToRoute(files, routeUUID, routeOwnerWebID) {\n  var result = false;\n  const session = await auth.currentSession();\n  if (!session) {\n    window.location.href = \"/login\";\n  }\n  const webId = session.webId;\n  if (routeOwnerWebID === null) {\n    routeOwnerWebID = webId;\n  }\n\n  const storage = await getRootStorage(webId);\n\n  let url = await findRouteURL(routeOwnerWebID, routeUUID);\n  // Si la encuentro entonces inserto el archivo y mando una circular\n  // (el fichero lo guardo en mi pod no en el del otro)\n  if (url !== null) {\n    var filenames = \"\";\n    for (var i = 0; i < files.length; i++) {\n      const file = files[i];\n      filenames = filenames + \", \" + file.name;\n      const fileName = uuidv4() + file.name;\n      const folder = storage + \"public/viade_es5b/files/\" + fileName;\n      const reader = new FileReader();\n\n      reader.onload = async (f) => {\n        const data = f.target.result;\n        // Lo mandamos a Solid\n        const response = await auth.fetch(folder, {\n          method: \"PUT\",\n          force: true,\n          headers: {\n            \"content-type\": file.type,\n          },\n          body: data,\n          credentials: \"include\",\n        });\n        if (response.ok) {\n          insertData(folder, url, webId);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    }\n    if (filenames.length > 0) {\n      //Si soy el dueño de la ruta mando un mensaje a todos\n      if (webId === routeOwnerWebID) {\n        // Busco a que amigos mandar la circular y las mando\n        var friends = await getSharedRouteFriends(storage, routeUUID);\n        for (let i = 0; i < friends.length; i++) {\n          await sendMediaNotification(webId, friends[i], url, filenames);\n        }\n      }\n      //sino le mando un mensaje al dueño de la ruta\n      else {\n        await sendMediaNotification(webId, routeOwnerWebID, url, filenames);\n      }\n      result = true;\n    }\n  }\n  return result;\n}\n\nasync function insertData(fileRoute, routeUrl, myWebId) {\n  const routeDocument = await fetchDocument(routeUrl);\n  // Initialise the new Subject:\n  const newComment = routeDocument.addSubject();\n\n  newComment.addRef(schema.contentUrl, fileRoute);\n  newComment.addRef(schema.author, myWebId);\n  newComment.addRef(rdf.type, schema.MediaObject);\n\n  await routeDocument.save([newComment]);\n}\nasync function sendMediaNotification(\n  webId,\n  friendWebId,\n  routeUrl,\n  nombreFicheros\n) {\n  return sendNotificationBody(\n    webId,\n    friendWebId,\n    `@prefix as: <https://www.w3.org/ns/activitystreams#> .\n    @prefix schema: <http://schema.org/> .\n    <> a as:Follow ;\n    schema:agent <${webId}> ;\n    schema:Action \"mediaRoute\" ;\n    schema:MediaObject \"${nombreFicheros}\" ;\n    schema:identifier <${routeUrl}> .\n    `\n  );\n}\n","import { schema } from \"rdf-namespaces\";\nimport { fetchDocument } from \"tripledoc\";\nimport { findRouteURL } from \"./helpers/routeHelper\";\n\nconst auth = require(\"solid-auth-client\");\n\nexport async function listMediaOfRoute (routeUUID, authorWebId) {\n\tvar result = [];\n\tlet session = null;\n\tsession = await auth.currentSession();\n\n\tif (!session) {\n\t\twindow.location.href = \"/login\";\n\t}\n\n\tlet url = await findRouteURL(authorWebId == null ? session.webId : authorWebId, routeUUID);\n\t// Si la encuentro entonces busco los ficheros\n\tif (url !== null) {\n\t\tconst routeDoc = await fetchDocument(url);\n\t\tconst ficheros = routeDoc.getSubjectsOfType(schema.MediaObject);\n\t\tfor (var i = 0; i < ficheros.length; i++) {\n\t\t\tconst fichero = ficheros[i].getRef(schema.contentUrl);\n\t\t\tresult = [...result, fichero];\n\t\t}\n\t}\n\treturn result;\n}\n","import {\n  AccessControlList,\n  AppPermission,\n} from \"@inrupt/solid-react-components\";\nconst auth = require(\"solid-auth-client\");\n\nexport async function validAppPermissions() {\n  const session = await auth.currentSession();\n  if (!session) {\n    window.location.href = \"/login\";\n  }\n  const webId = session.webId;\n\n  const userApp = await AppPermission.checkPermissions(webId);\n\n  const permissions = AccessControlList.MODES;\n  const { APPEND, READ, WRITE, CONTROL } = permissions;\n\n  if (userApp !== null && userApp.permissions !== null) {\n    var hasPermissions = [APPEND, READ, WRITE, CONTROL].every((permission) =>\n      userApp.permissions.includes(permission)\n    );\n    if (hasPermissions) {\n      return true;\n    }\n  }\n  return false;\n}\n","import { addRoute } from \"./Scripts/addRoute.js\";\nimport { deleteRoute } from \"./Scripts/deleteRoute.js\";\nimport { listRoutes } from \"./Scripts/listRoutes.js\";\nimport { listFriends } from \"./Scripts/listFriends.js\";\nimport { addFriend } from \"./Scripts/addFriend.js\";\nimport { shareRoute } from \"./Scripts/shareRoute.js\";\nimport { processSharedRoutes } from \"./Scripts/processSharedRoutes.js\";\nimport { listSharedRoutes } from \"./Scripts/listSharedRoutes.js\";\nimport { addCommentToRoute } from \"./Scripts/addCommentToRoute.js\";\nimport { listCommentsOfRoute } from \"./Scripts/listCommentsOfRoute.js\";\nimport { addMediaToRoute } from \"./Scripts/addMediaToRoute.js\";\nimport { getPersonaByWebId } from \"./Scripts/helpers/personHelper\";\nimport { listMediaOfRoute } from \"./Scripts/listMediaOfRoute\";\nimport { validAppPermissions } from \"./Scripts/validAppPermissions\";\n\nexport default class BackMain {\n\tstatic listarRutas () {\n\t\treturn listRoutes();\n\t}\n\n\tstatic añadirRuta (Ruta) {\n\t\treturn addRoute(Ruta);\n\t}\n\n\tstatic borrarRuta (uuid, routeName) {\n\t\treturn deleteRoute(uuid, routeName);\n\t}\n\n\tstatic listarAmigos () {\n\t\treturn listFriends();\n\t}\n\n\tstatic añadirAmigo (friendWebId) {\n\t\treturn addFriend(friendWebId);\n\t}\n\n\tstatic compartirRuta (friendWebId, rutaUUID) {\n\t\treturn shareRoute(friendWebId, rutaUUID);\n\t}\n\n\tstatic procesarRutasCompartidas () {\n\t\treturn processSharedRoutes();\n\t}\n\n\tstatic listarRutasCompartidasConmigo () {\n\t\treturn listSharedRoutes();\n\t}\n\n\tstatic comentarRuta (comment, routeUUID, routeOwnerWebID) {\n\t\treturn addCommentToRoute(comment, routeUUID, routeOwnerWebID);\n\t}\n\n\tstatic obtenerComentariosRuta (rutaUUID, webId) {\n\t\treturn listCommentsOfRoute(rutaUUID, webId);\n\t}\n\n\tstatic getPersonByWebID (webID) {\n\t\treturn getPersonaByWebId(webID);\n\t}\n\n\tstatic subirFicheroARuta (file, routeUUID, routeOwnerWebID) {\n\t\treturn addMediaToRoute(file, routeUUID, routeOwnerWebID);\n\t}\n\n\tstatic obtenerFicherosRuta (rutaUUID, webId) {\n\t\treturn listMediaOfRoute(rutaUUID, webId);\n\t}\n\tstatic permisosAppValidos () {\n\t\treturn validAppPermissions();\n\t}\n}\n","import Ruta from \"../../model/Ruta\";\nimport Hito from \"../../model/Hito\";\nimport BackMain from \"../../../BackEnd/BackMain.js\";\n\n/*\n * Clase que representa el servicio de Rutas (Fachada)\n */\nclass RutaService {\n\tconstructor() {\n\t\t// Simula la base de datos\n\t\tthis.BDRutas = [];\n\t\tthis.inicializarBD();\n\t}\n\n\t/*\n   * Método de prueba que inicializa la lista\n   * que simula la base de datos.\n   */\n\tinicializarBD() {\n\t\tvar r1 = new Ruta(\"Ruta-1\", [43.534401, -5.909476], \"Genial\");\n\t\tvar r2 = new Ruta(\"Ruta-2\", [43.361763, -5.847995], \"Bien\");\n\n\t\tr1.addHito(new Hito(\"Hito-r1-1\", 43.531484, -5.911818));\n\t\tr1.addHito(new Hito(\"Hito-r1-2\", 43.528935, -5.914273));\n\n\t\tr2.addHito(new Hito(\"Hito-r2-1\", 43.362182, -5.84597));\n\t\tr2.addHito(new Hito(\"Hito-r2-2\", 43.363071, -5.846447));\n\n\t\tthis.BDRutas = [...this.BDRutas, r1];\n\t\tthis.BDRutas = [...this.BDRutas, r2];\n\t}\n\n\t/*\n   * Devuelve TODAS las rutas almacenadas en\n   * el sistema.\n   */\n\tgetRutas() {\n\t\treturn BackMain.listarRutas();\n\t}\n\n\t/*\n   * Devuelve TODAS las rutas que alguien haya compartido conmigo\n   */\n\tgetRutasCompartidasConmigo() {\n\t\treturn BackMain.listarRutasCompartidasConmigo();\n\t}\n\n\tdeleteRuta(uuid, rutaNombre) {\n\t\treturn BackMain.borrarRuta(uuid, rutaNombre);\n\t}\n\taddRuta(nombre, latitud, longitud, descripcion, hitos) {\n\t\tlatitud = parseFloat(latitud.replace(/\\s+/g, \"\"));\n\t\tlongitud = parseFloat(longitud.replace(/\\s+/g, \"\"));\n\t\tvar ruta = new Ruta(nombre, [latitud, longitud], descripcion);\n\t\tfor (var i in hitos) {\n\t\t\thitos[i].latitud = parseFloat(hitos[i].latitud.replace(/\\s+/g, \"\"));\n\t\t\thitos[i].longitud = parseFloat(hitos[i].longitud.replace(/\\s+/g, \"\"));\n\t\t\truta.addHito(\n\t\t\t\tnew Hito(hitos[i].nombre, hitos[i].latitud, hitos[i].longitud)\n\t\t\t);\n\t\t}\n\t\treturn BackMain.añadirRuta(ruta);\n\t}\n\n\taddRutaObject(ruta) {\n\t\treturn BackMain.añadirRuta(ruta);\n\t}\n\n\tshareRuta(friendWebId, rutaUUID) {\n\t\treturn BackMain.compartirRuta(friendWebId, rutaUUID);\n\t}\n\n\tprocesarRutasCompartidas() {\n\t\treturn BackMain.procesarRutasCompartidas();\n\t}\n\n\tcomentarRuta(comment, routeUUID, routeOwnerWebID) {\n\t\treturn BackMain.comentarRuta(comment, routeUUID,routeOwnerWebID);\n\t}\n\n\tobtenerComentariosRuta(rutaUUID, webId) {\n\t\treturn BackMain.obtenerComentariosRuta(rutaUUID, webId);\n\t}\n\n\tsubirFicheroARuta(files, routeUUID, routeOwnerWebID) {\n\t\treturn BackMain.subirFicheroARuta(files, routeUUID, routeOwnerWebID);\n\t}\n\n\tobtenerFicherosRuta(rutaUUID, webId) {\n\t\treturn BackMain.obtenerFicherosRuta(rutaUUID, webId);\n\t}\n\tpermisosAppValidos() {\n\t\treturn BackMain.permisosAppValidos();\n\t}\n}\n\nexport default RutaService;\n","import Persona from \"../../model/Persona.js\";\nimport BackMain from \"../../../BackEnd/BackMain.js\";\n\n/*\n * Clase que representa el servicio de Amigos (Fachada)\n */\nclass AmigoService {\n\tconstructor () {\n\t\t// Simula la base de datos\n\t\tthis.BDAmigos = [];\n\t\tthis.inicializarBD();\n\t}\n\n\t/*\n   * Método de prueba que inicializa la lista\n   * que simula la base de datos.\n   */\n\tinicializarBD () {\n\t\tvar amigo1 = new Persona(\n\t\t\t\"Pedro\",\n\t\t\t\"https://pedro223.inrupt.net/profile/card#me\",\n\t\t\t\"\"\n\t\t);\n\t\tvar amigo2 = new Persona(\n\t\t\t\"Alex\",\n\t\t\t\"https://hamalawindows.solid.community/profile/card#me\",\n\t\t\t\"\"\n\t\t);\n\n\t\tvar amigo3 = new Persona(\n\t\t\t\"Lucía\",\n\t\t\t\"https://uo265060.solid.community/profile/card#me\",\n\t\t\t\"\"\n\t\t);\n\n\t\tthis.BDAmigos = [...this.BDAmigos, amigo1];\n\t\tthis.BDAmigos = [...this.BDAmigos, amigo2];\n\t\tthis.BDAmigos = [...this.BDAmigos, amigo3];\n\t}\n\n\t/*\n   * Devuelve los amigos que tengo\n   */\n\tgetAmigos () {\n\t\treturn BackMain.listarAmigos();\n\t\t// return this.BDAmigos;\n\t}\n\n\t/*\n   * Añade un amigo al mi perfil (alias es un nombre que le doy yo al amigo, no tiene porque ser el suyo)\n   * si logro añadirlo devuelve true, sino false;\n   */\n\taddAmigo (webId) {\n\t\t//elimino simbolos redundantes (darian problemas para permisos)\n\t\twebId = webId.replace(/([^:]\\/)\\/+/g, \"$1\");\n\t\treturn BackMain.añadirAmigo(webId);\n\t}\n\n\t/*\n   * Devuelve una persona de webID pasado como parámetro.\n   */\n\tgetPersonByWebID (webID) {\n\t\treturn BackMain.getPersonByWebID(webID);\n\t}\n\n}\n\nexport default AmigoService;\n","import React, { Component } from \"react\";\nimport RouteList from \"./RouteList\";\nimport PacmanViewLoader from \"../../util/Loaders/PacmanViewLoader\";\nimport RutaService from \"../../../services/rutas/RutaService\";\nimport AmigoService from \"../../../services/amigos/AmigoService\";\nimport { Jumbotron } from \"react-bootstrap\";\n\n/**\n * Clase VerRutas que representa la vista general para ver\n * el listado de las rutas del POD del usuario loggeado.\n * COMPONENTE PADRE - Hijos: RouteList.\n */\nclass VerRutas extends Component {\n  constructor() {\n    super();\n    this.rutaService = new RutaService();\n    this.amigoService = new AmigoService();\n  }\n\n  state = {\n    loading: true,\n  };\n\n  render() {\n    return (\n      <div>\n        <header>\n          <Jumbotron>\n            <h1 className=\"display-4\" data-testid=\"titleVerRutas\">Mis rutas</h1>\n            <p>\n              Aquí se muestra un listado con todas las rutas almacenadas en tu\n              POD. Puedes ver los datos básicos de cada una, agregarles\n              comentarios y fotos, eliminarlas de tu POD o bien compartirlas con\n              varios amigos. Además puedes utilizar la <b>tabla de hitos</b>{\" \"}\n              para hacer click sobre un hito y visualizarlo en el mapa.\n            </p>\n          </Jumbotron>\n        </header>\n        <PacmanViewLoader // Overlay de carga para mostrar la vista de las rutas.\n          text={\"Espera un momento, estamos recuperando tus rutas...\"}\n          children={\n            <RouteList\n              handleLoaded={this.handleLoaded}\n              permisosValidos={this.rutaService.permisosAppValidos()}\n              getRutas={this.rutaService.getRutas}\n              deleteRuta={this.rutaService.deleteRuta}\n              shareRuta={this.rutaService.shareRuta}\n              obtenerFicherosRuta={this.rutaService.obtenerFicherosRuta}\n              subirFicheroARuta={this.rutaService.subirFicheroARuta}\n              getAmigos={this.amigoService.getAmigos}\n              comentarRuta={this.rutaService.comentarRuta}\n              obtenerComentariosRuta={this.rutaService.obtenerComentariosRuta}\n              showMap={true}\n              flyTo={this.flyTo}\n            />\n          }\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n\n  /**\n   * Método invocado desde los RouteCard para llevar a cabo la\n   * animación para centrar un punto en el mapa.\n   */\n  flyTo = (latlng, zoom, ref) => {\n    let mapa = ref.current.leafletElement;\n    mapa.flyTo(latlng, zoom);\n  };\n\n  /**\n   * Invocado desde la lista de rutas para indicar que ya se han\n   * cargado las rutas del usuario.\n   */\n  handleLoaded = () => {\n    this.setState({ loading: false });\n  };\n}\n\nexport default VerRutas;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  state = {};\n  render() {\n    return (\n      <footer className=\"text-center\">\n        &copy; Viade - Arquitectura del Software\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"../../css/spacing.css\";\n\nconst NavBar = () => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand href=\"#/\">\n        <img\n          alt=\"\"\n          src={process.env.PUBLIC_URL + \"/img/viade2.png\"}\n          width=\"40\"\n          height=\"40\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        <div className=\" d-inline-block viade-brand\">Viade-Rutas</div>\n      </Navbar.Brand>\n      <Nav className=\"ml-auto\">\n        <Nav.Link href=\"#/login\">Log In</Nav.Link>\n        <Nav.Link href=\"#/signup\">Sign Up</Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"../../components/NavBar/nav-bar.component\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\n\nconst NotLoggedInLayout = props => {\n  const { component: Component, ...rest } = props;\n  const webId = useWebId();\n  return !webId ? (\n    <Route\n      {...rest}\n      component={matchProps => (\n        <div>\n          <NavBar />\n          <Component {...matchProps} />\n        </div>\n      )}\n    />\n  ) : (\n    <Redirect to='/' />\n  )\n}\n\nexport default NotLoggedInLayout\n","import React from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport Nav from \"react-bootstrap/Nav\";\nimport auth from \"solid-auth-client\";\nimport \"../../css/spacing.css\";\n\nconst AuthNavBar = (props) => {\n  const logout = () => {\n    auth.logout();\n    window.location = \"#/login\";\n  };\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand href=\"#/\">\n        <img\n          alt=\"\"\n          src={process.env.PUBLIC_URL + \"/img/viade2.png\"}\n          width=\"40\"\n          height=\"40\"\n          className=\"d-inline-block align-top\"\n        />{\" \"}\n        <div className=\" d-inline-block viade-brand\">Viade-Rutas</div>\n      </Navbar.Brand>\n      <Nav>\n        <Nav.Link href=\"#/ver-rutas\">Mis rutas</Nav.Link>\n        <Nav.Link href=\"#/add-menu\">Crear rutas</Nav.Link>\n        <Nav.Link href=\"#/friends\">Amigos</Nav.Link>\n        <Nav.Link href=\"#/shared\">Compartido conmigo</Nav.Link>\n      </Nav>\n\n      <Nav className=\"ml-auto\">\n        <Nav.Link className=\"logout\" onClick={logout}>\n          Log Out\n        </Nav.Link>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default AuthNavBar;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport AuthNavBar from \"../../components/AuthNavBar/auth-nav-bar.component\";\nimport NavBar from \"../../components/NavBar/nav-bar.component\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\n\nconst PrivateLayout = props => {\n  const webId = useWebId();\n  const { component: Component, service, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      component={({ history, location, match, service, name }) => (\n        <div>\n          {webId ? (\n            <div>\n              <AuthNavBar {...{ history, location, match, webId, name }} />\n              <Component {...{ history, location, match, service }} />\n            </div>\n          ) : (\n            <div>\n              <NavBar {...{ history, location, match }} />\n              <h1>\n                Usuario no autenticado no puede acceder a este URL,\n                identifíquese\n              </h1>\n            </div>\n          )}\n        </div>\n      )}\n    />\n  );\n};\n\nexport default PrivateLayout;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useWebId } from \"@inrupt/solid-react-components\";\nimport NavBar from \"../../components/NavBar/nav-bar.component\";\nimport AuthNavBar from \"../../components/AuthNavBar/auth-nav-bar.component\";\n\nconst PublicLayout = props => {\n  const webId = useWebId();\n  const { component: Component, ...rest } = props;\n  return (\n    <Route\n      {...rest}\n      component={({ history, location, match }) => (\n        <div>\n          {webId ? (\n            <AuthNavBar {...{ history, location, match, webId }} />\n          ) : (\n            <NavBar\n              {...{ history, location, match }}\n            />\n          )}\n          <Component {...{ history, location, match }} />\n        </div>\n      )}\n    />\n  )\n}\n\nexport default PublicLayout\n","import React, { Component } from \"react\";\nimport { Card, Form, InputGroup, Button, Spinner } from \"react-bootstrap\";\nimport \"../../css/position.css\";\nimport \"../../css/font-style.css\";\n\nclass AddFriend extends Component {\n  state = {\n    value: \"\",\n    disabled: true\n  };\n\n  render() {\n    return (\n      <div>\n        <Card className=\"first\">\n          <Card.Header className=\"bold\" data-testid=\"titleAgregarAmigo\">Agregar nuevo amigo</Card.Header>\n          <Card.Body>\n            <Card.Text data-testid=\"nuevoAmigo\">\n              Para agregar un nuevo amigo, introduce su WebID. El WebID puede\n              cambiar según el provedor del POD del usuario.\n            </Card.Text>\n\n            <InputGroup className=\"input\">\n              <InputGroup.Prepend>\n                <InputGroup.Text data-testid=\"webID\">WebID</InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                placeholder=\"https://alex123.solid.community\"\n                onChange={this.handleKeyPress}\n                data-testid=\"formAddFriend\"\n              />\n            </InputGroup>\n\n            <Button\n              data-testid=\"buttonAdd\"\n              className=\"mt-2\"\n              disabled={this.state.disabled}\n              onClick={() =>\n                this.props.handleAddFriend(\n                  this.state.value + \"/profile/card#me\"\n                )\n              }\n              type=\"submit\"\n              variant=\"success\"\n            >\n              {this.loading()}\n            </Button>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n\n  /**\n   * Manejador del evento de tecla presionada en el input\n   * del WebID, que deshabilita el botón si no hay texto introducido.\n   */\n  handleKeyPress = event => {\n    let string = event.target.value;\n    if (string.length > 0) this.setState({ disabled: false });\n    else this.setState({ disabled: true });\n    // Guardamos el valor en el estado\n    this.setState({ value: string });\n  };\n\n  /**\n   * Se encarga de rendedirzar el contenido del botón\n   * según esté llevándose a cabo la operación de agregar un amigo o no.\n   */\n  loading() {\n    if (this.props.isLoading) {\n      return (\n        <div>\n          <Spinner\n            data-testid=\"spinner\"\n            className=\"mr-2\"\n            as=\"span\"\n            size=\"sm\"\n            animation=\"border\"\n            role=\"status\"\n          />\n          Cargando...\n        </div>\n      );\n    }\n    return \"Agregar\";\n  }\n}\n\nexport default AddFriend;\n","import React, { Component } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nclass FriendList extends Component {\n  render () {\n    return (\n      <div>\n        <h3>Tus amigos</h3>\n        <div className='centered-container'>{this.showComponent()}</div>\n      </div>\n    )\n  }\n\n  /**\n   * Devuelve un componente u otro en función del estado.\n   */\n  showComponent () {\n    if (this.props.noFriends) {\n      // Aún no tiene amigos\n      return (\n        <Alert variant='warning' data-testid='alertaNoAmigos'>\n          Aún no tienes ningún amigo, agrega uno introduciendo su WebID\n        </Alert>\n      )\n    }\n    return (\n      <table className='table table-striped' data-testid='tablaAmigos'>\n        <thead>\n          <tr>\n            <th scope='col' />\n            <th scope='col'>Nombre</th>\n            <th scope='col'>WebID</th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.amigos.map((amigo, key) => (\n            <tr key={key++}>\n              <th scope='row'>\n                <img\n                  src={amigo.getFoto() !== null ? amigo.getFoto() : process.env.PUBLIC_URL + '/img/defaultProfile.png'}\n                  className='rounded-circle' alt='' width='50' height='50'\n                />\n              </th>\n              <td>{amigo.getNombre()}</td>\n              <td>{amigo.getWebId()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    )\n  }\n}\n\nexport default FriendList;\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nclass MessageDialog extends Component {\n  render () {\n    return (\n      <Modal show={this.props.show}>\n        <Modal.Header>\n          <Modal.Title>{this.props.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{this.props.message}</Modal.Body>\n        <Modal.Footer>\n          <Button variant='primary' onClick={this.props.handleAceptar}>\n            Aceptar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nexport default MessageDialog\n","import React, { Component } from \"react\";\nimport AmigoService from \"../../services/amigos/AmigoService\";\nimport AddFriend from \"./AddFriend\";\nimport FriendList from \"./FriendList\";\nimport MessageDialog from \"../util/MessageDialog\";\nimport { Alert, Jumbotron } from \"react-bootstrap\";\n\nclass Friends extends Component {\n  constructor() {\n    super();\n    this.service = new AmigoService();\n  }\n\n  state = {\n    amigos: [],\n    noFriends: false,\n    showDialog: false,\n    dialogMessage: \"\",\n    showError: false,\n    loading: false\n  };\n\n  /**\n   * Se ejecutará cuando se monte el componente en el DOM.\n   */\n  async componentDidMount() {\n    this.setState({ amigos: await this.service.getAmigos() });\n    if (this.state.amigos.length === 0) this.setState({ noFriends: true });\n  }\n\n  render() {\n    return (\n      <div data-testid=\"componeteJUmbotron\">\n        <Jumbotron>\n          <h2 className=\"display-4\" data-testid=\"titleAmigos\">\n            Amigos\n          </h2>\n          <p data-testid=\"gestionAmigos\">\n            Desde aquí puedes realizar la gestión de tus amigos.\n          </p>\n        </Jumbotron>\n\n        <AddFriend\n          handleAddFriend={webID => this.handleAddFriend(webID)}\n          isLoading={this.state.loading}\n          data-testid=\"componenteAddFriend\"\n        />\n        {this.showError()}\n        <FriendList\n          amigos={this.state.amigos}\n          noFriends={this.state.noFriends}\n        />\n\n        <MessageDialog\n          show={this.state.showDialog}\n          title=\"Agregar un amigo\"\n          message={this.state.dialogMessage}\n          handleAceptar={() => this.setState({ showDialog: false })}\n        ></MessageDialog>\n      </div>\n    );\n  }\n\n  /**\n   * Será invocado cuando se agregue un nuevo amigo en el pod\n   * del usuario logueado.\n   */\n  handleAddFriend = async webID => {\n    // Agregamos el nuevo amigo\n    this.setState({ loading: true });\n    let response = await this.service.addAmigo(webID);\n    if (response) {\n      // Se ha agregado correctamente\n      this.setState({\n        showDialog: true,\n        showError: false,\n        dialogMessage: \"El usuario ha sido agregado a tu lista de amigos.\",\n        amigos: await this.service.getAmigos()\n      });\n    } else {\n      this.setState({\n        showError: true\n      });\n    }\n    this.setState({\n      noFriends: this.state.amigos.length === 0,\n      loading: false\n    });\n  };\n\n  // Handlers de errores\n  showError = () => {\n    return (\n      this.state.showError && (\n        <Alert variant=\"danger\" data-testid=\"alertNoExisteUsuario\">\n          No existe el usuario o ya está presente en tu lista de amigos.\n        </Alert>\n      )\n    );\n  };\n}\n\nexport default Friends;\n","import React, { Component } from \"react\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nclass HashViewLoader extends Component {\n  state = {};\n  render() {\n    return (\n      <LoadingOverlay\n        active={this.props.loading}\n        spinner={\n          <HashLoader\n            size={35}\n            color={\"#50E3C2\"}\n            css={{ display: \"block\", margin: \"0 43% 2vh\" }}\n          />\n        }\n        text={this.props.text}\n        styles={{\n          wrapper: {\n            width: \"100%\",\n            height: \"100vh\"\n          }\n        }}\n      >\n        {this.props.children}\n      </LoadingOverlay>\n    );\n  }\n}\n\nexport default HashViewLoader;\n","import React, { Component } from \"react\";\nimport { Alert, Container, Card, Col, Row, Jumbotron } from \"react-bootstrap\";\nimport MapRuta from \"../map/MapRuta\";\nimport CommentBox from \"./CommentBox\";\nimport PhotoGallery from \"./PhotoGallery\";\n\n/**\n * Componente que representa la vista de 'Compartido\n * conmigo' que contiene las rutas compartidas por los\n * amigos del usuario.\n */\nclass SharedWithMe extends Component {\n  state = { rutasCompartidas: [], emptyList: false };\n\n  async componentDidMount() {\n    let sharedRoutes = await this.props.getRutasCompartidasConmigo();\n    this.setState({\n      rutasCompartidas: sharedRoutes,\n      emptyList: sharedRoutes.length === 0\n    });\n    this.props.handleLoaded(); // Indicar al padre que ya se han cargado las rutas.\n  }\n\n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <h2 className=\"display-4\" data-testid=\"title\">\n            Compartido conmigo\n          </h2>\n          <p data-testid=\"textoCompartidoConmigo\">\n            En esta sección puedes ver los detalles de las rutas que te han\n            compartido tus amigos, junto con sus comentarios y fotos.\n          </p>\n        </Jumbotron>\n\n        {this.state.emptyList && (\n          <Alert variant=\"warning\" data-testid=\"alertaNoRutasCompartidas\">\n            Aún no te han compartido ninguna ruta.\n          </Alert>\n        )}\n        {this.state.rutasCompartidas.map((sharedRoute, key) => {\n          return (\n            <Card key={key++}>\n              <Card.Header>\n                <h4>{sharedRoute.getRuta().getNombre()}</h4>\n                <p>\n                  Autor: <b>{sharedRoute.getAmigo().getNombre()}</b>\n                </p>\n              </Card.Header>\n              <Card.Body>\n                <Container fluid>\n                  <Row>\n                    <Col>\n                      <Row className=\"mb-2\">\n                        <Col>\n                          <Card.Title>Descripción</Card.Title>\n                          <Card.Text>\n                            {sharedRoute.getRuta().getDescripcion()}\n                          </Card.Text>\n                        </Col>\n                      </Row>\n                      <Row className=\"mb-2\">\n                        <Col>\n                          <CommentBox\n                            author={sharedRoute.getAmigo()}\n                            ruta={sharedRoute.getRuta()}\n                            onlyRead={false}\n                            comentarRuta={this.props.comentarRuta}\n                            obtenerComentariosRuta={\n                              this.props.obtenerComentariosRuta\n                            }\n                          ></CommentBox>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                          <PhotoGallery\n                            author={sharedRoute.getAmigo()}\n                            ruta={sharedRoute.getRuta()}\n                            onlyRead={false}\n                            subirFicheroARuta={this.props.subirFicheroARuta}\n                            obtenerFicherosRuta={this.props.obtenerFicherosRuta}\n                          ></PhotoGallery>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <Col>\n                      {this.props.showMap && (\n                        <MapRuta\n                          data-testid=\"map\"\n                          ruta={sharedRoute.getRuta()}\n                        ></MapRuta>\n                      )}\n                    </Col>\n                  </Row>\n                </Container>\n              </Card.Body>\n            </Card>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default SharedWithMe;\n","import React, { Component } from \"react\";\nimport HashViewLoader from \"../util/Loaders/HashViewLoader\";\nimport SharedWithMe from \"./SharedWithMe\";\nimport RutaService from \"../../services/rutas/RutaService\";\n\n/**\n * Clase ShareView que representa la vista de Rutas Compartidas Conmigo.\n * COMPONENTE PADRE - Hijos: SharedWithMe\n */\nclass ShareView extends Component {\n  constructor(props) {\n    super(props);\n    this.rutaService = new RutaService();\n  }\n\n  state = { loading: true };\n  render() {\n    return (\n      <HashViewLoader\n        text=\"Recuperando rutas de tus colegas...\"\n        children={\n          <SharedWithMe\n            handleLoaded={this.handleLoaded}\n            getRutasCompartidasConmigo={\n              this.rutaService.getRutasCompartidasConmigo\n            }\n            subirFicheroARuta={this.rutaService.subirFicheroARuta}\n            obtenerFicherosRuta={this.rutaService.obtenerFicherosRuta}\n            comentarRuta={this.rutaService.comentarRuta}\n            obtenerComentariosRuta={this.rutaService.obtenerComentariosRuta}\n            showMap={true}\n          />\n        }\n        loading={this.state.loading}\n      />\n    );\n  }\n\n  handleLoaded = () => {\n    this.setState({ loading: false });\n  };\n}\n\nexport default ShareView;\n","import React, { Component } from \"react\";\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport L from \"leaflet\";\nimport \"../../../front-end/css/errors.css\";\n\n/**\n * Componente que representa un panel modal que permite\n * modificar el hito sobre el que se ha hecho click en la vista\n * para añadir una ruta a través de un mapa.\n */\nclass MapPointModal extends Component {\n  state = {\n    nameValue: \"\",\n    latValue: \"\",\n    lngValue: \"\",\n  };\n\n  render() {\n    return (\n      <Modal show={this.props.showModal} centered>\n        <Modal.Header>\n          <Modal.Title>Modificar este hito</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Deja en blanco aquellos campos que no quieras modificar.</p>\n          {this.props.point != null && (\n            <div>\n              <InputGroup className=\"mb-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Nombre</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  disabled={this.props.point.index === 0}\n                  onChange={this.onChangeName}\n                  placeholder={this.props.point.name}\n                />\n              </InputGroup>\n              <InputGroup className=\"mb-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Latitud</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  onChange={this.onChangeLat}\n                  placeholder={this.props.point.latlng.lat}\n                  type=\"number\"\n                  step=\"any\"\n                />\n              </InputGroup>\n              <InputGroup className=\"mb-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text>Longitud</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl\n                  onChange={this.onChangeLng}\n                  placeholder={this.props.point.latlng.lng}\n                  type=\"number\"\n                  step=\"any\"\n                />\n              </InputGroup>\n            </div>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.props.handleClose}>\n            Cancelar\n          </Button>\n          <Button onClick={this.modificar} data-testid=\"btModificar\">Modificar</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  // Métodos para manejar los eventos de cambio de los campos\n  onChangeName = (e) => {\n    this.setState({\n      nameValue: e.target.value,\n    });\n  };\n\n  onChangeLat = (e) => {\n    this.setState({ latValue: parseFloat(e.target.value) });\n  };\n\n  onChangeLng = (e) => {\n    this.setState({ lngValue: parseFloat(e.target.value) });\n  };\n\n  /**\n   * Manejador para recolectar los valores de los campos modificados o bien\n   * dejar el valor que tenía antes el punto en aquellos en los que se deje vacío.\n   */\n  modificar = () => {\n    let result = this.parseData(this.state);\n    this.props.handleModifyPoint(result); // Modificamos la lista de puntos del padre\n    this.props.handleClose(); // Cerramos el dialogo modal.\n  };\n\n  /**\n   * Método encargado de parsear los datos del objeto recibido\n   * como parámetro para transformarlo en un objeto adecuado para ser\n   * representado como un punto en el mapa.\n   */\n  parseData(data) {\n    let result = {\n      index: this.props.point.index,\n      name: \"\",\n      latlng: null,\n    };\n    result.name =\n      data.nameValue.length === 0 ? this.props.point.name : data.nameValue;\n    let lat =\n      data.latValue.length === 0 || isNaN(data.latValue)\n        ? this.props.point.latlng.lat\n        : data.latValue;\n    let lng =\n      data.lngValue.length === 0 || isNaN(data.lngValue)\n        ? this.props.point.latlng.lng\n        : data.lngValue;\n\n    result.latlng = L.latLng(lat, lng);\n    return result;\n  }\n}\n\nexport default MapPointModal;\n","import React, { Component } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport { Map, Marker, TileLayer, Popup, Polyline } from \"react-leaflet\";\nimport { Alert, ButtonGroup, Button, ButtonToolbar } from \"react-bootstrap\";\nimport L from \"leaflet\";\nimport * as icons from \"./MarkerIcons\";\nimport MapPointModal from \"./MapPointModal\";\n\n// Sin esto no se muestran los Markers\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\n});\n\n/**\n * Componente que modela un mapa sobre el que se puede hacer click\n * para dibujar una ruta en el mapa, para luego añadirla como una\n * ruta nueva.\n */\nclass AddRouteMap extends Component {\n  state = {\n    zoom: 13,\n    center: [],\n    error: false,\n    showModal: false,\n    clickedPoint: null,\n  };\n\n  componentDidMount() {\n    this.getUserPosition();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.center != null && this.state.center.length > 0 && (\n          <div>\n            <ButtonToolbar className=\"mb-2\" aria-label=\"Controles del mapa\">\n              <ButtonGroup className=\"mr-2\">\n                <Button onClick={this.deleteLastPoint} variant=\"info\">\n                  Borrar último punto\n                </Button>\n              </ButtonGroup>\n              <ButtonGroup>\n                <Button onClick={this.deleteAllPoints} variant=\"info\">\n                  Borrar todos los puntos\n                </Button>\n              </ButtonGroup>\n            </ButtonToolbar>\n\n            <Map\n              onclick={this.handleClickOnMap}\n              center={this.state.center}\n              zoom={this.state.zoom}\n              doubleClickZoom={false}\n            >\n              <TileLayer\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              />\n\n              {this.props.points.map((point, key) => {\n                return (\n                  <Marker\n                    position={point.latlng}\n                    key={key++}\n                    icon={key === 1 ? icons.greenIcon : icons.defaultIcon}\n                    ondblclick={() => this.showModal(point)}\n                  >\n                    <Popup>{point.name}</Popup>\n                  </Marker>\n                );\n              })}\n              {this.getPolyline(\"red\")}\n            </Map>\n\n            {this.state.showModal && (\n              <MapPointModal\n                showModal={this.state.showModal}\n                handleClose={this.hideModal}\n                handleModifyPoint={this.handleModifyPoint}\n                point={this.state.clickedPoint}\n              />\n            )}\n          </div>\n        )}\n\n        {this.state.error ? (\n          <Alert variant=\"warning\">Ha habido un error al cargar el mapa.</Alert>\n        ) : null}\n      </div>\n    );\n  }\n\n  // Controles del diálogo modal\n  showModal = (point) => {\n    this.setState({ showModal: true, clickedPoint: point });\n  };\n\n  hideModal = () => {\n    this.setState({ showModal: false, clickedPoint: null });\n  };\n\n  // ************************\n\n  /**\n   * Obtiene, si es posible, las coordenadas del usuario y establece el centro\n   * del mapa en esas coordenadas, o establece una variable de error en caso de que\n   * no sea posible obtener las coordenadas.\n   */\n  getUserPosition = () => {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {\n        let center = [];\n        center.push(position.coords.latitude);\n        center.push(position.coords.longitude);\n        this.setState({ center: center });\n      },\n      (err) => {\n        this.setState({ error: true });\n      }\n    );\n  };\n\n  /**\n   * Manejador para el evento de click sobre el mapa, que añade\n   * un nuevo objeto Marker a la lista de puntos del estado.\n   */\n  handleClickOnMap = (e) => {\n    let points = this.props.points;\n    let o = {\n      index: points.length,\n      name: points.length === 0 ? \"Inicio\" : `Punto ${points.length}`,\n      latlng: e.latlng,\n    };\n    points.push(o);\n    this.props.updatePoints(points);\n  };\n\n  /**\n   * Se encarga de borrar el útimo punto de la ruta sobre\n   * el que se hizo click.\n   */\n  deleteLastPoint = () => {\n    let points = this.props.points;\n    let lastIndex = points.length - 1;\n    points.splice(lastIndex, 1);\n    this.props.updatePoints(points);\n  };\n\n  /**\n   * Elimina todos los puntos actuales sobre los que se ha hecho click.\n   */\n  deleteAllPoints = () => {\n    this.props.updatePoints([]);\n  };\n\n  /**\n   * Dada la lista de puntos, construye una linea\n   * que une dichos puntos, mediante el elemento <Polyline>\n   */\n  getPolyline = (color) => {\n    return (\n      <Polyline\n        color={color}\n        positions={this.props.points.map((p) => {\n          return [p.latlng.lat, p.latlng.lng];\n        })}\n      />\n    );\n  };\n\n  /**\n   * Manejador para el evento de modificar un punto desde el\n   * panel modal. Recibe el punto a modificar con los datos\n   * actualizados.\n   */\n  handleModifyPoint = (point) => {\n    let updatedPoints = this.props.points;\n    updatedPoints.splice(point.index, 1, point);\n    this.props.updatePoints(updatedPoints);\n  };\n}\n\nexport default AddRouteMap;\n","import React, { Component } from \"react\";\nimport AddRouteMap from \"../../map/AddRouteMap\";\nimport {\n  Container,\n  Col,\n  Row,\n  Card,\n  InputGroup,\n  FormControl,\n  Button,\n  Spinner,\n  Overlay,\n  Tooltip,\n} from \"react-bootstrap\";\nimport Hito from \"../../../model/Hito\";\nimport Ruta from \"../../../model/Ruta\";\nimport MessageDialog from \"../../util/MessageDialog\";\nimport \"../../../css/tooltips.css\";\n\n/**\n * Componente que representa la vista para añadir una ruta a través\n * de un mapa, en donde el usuario puede ir hacieno click para ir\n * dibujando la ruta.\n */\nclass AddRutaMap extends Component {\n  constructor(props) {\n    super(props);\n    // referencias\n    this.nameField = React.createRef();\n    this.descriptionField = React.createRef();\n    this.pointsField = React.createRef();\n  }\n\n  state = {\n    name: \"\",\n    description: \"\",\n    points: [], // array de objetos {index: indice en el array, name: \"nombre del punto\", latlng: objeto LatLng},\n    isAdding: false, // Indica si se está añadiendo la ruta al POD.\n    routeIsAdded: false, // Indica si ya se ha añadido la ruta al POD.\n    invalidName: false,\n    invalidDescription: false,\n    invalidPoints: false,\n  };\n\n  render() {\n    return (\n      <div>\n        <Container fluid>\n          <Row>\n            <Col>\n              <Card className=\"mb-2\" style={{ width: \"70vh\" }}>\n                <Card.Header>Datos básicos</Card.Header>\n                <Card.Body>\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>Nombre</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      placeholder=\"Ruta de Avilés\"\n                      onChange={this.onChangeName}\n                      value={this.state.name}\n                      ref={this.nameField}\n                      testid=\"input-nombre\"\n                    />\n                    {this.showErrorTooltTip(\n                      this.nameField,\n                      this.state.invalidName,\n                      \"Nombre no válido\",\n                      \"right\"\n                    )}\n                  </InputGroup>\n                  <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>Descripción</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      placeholder=\"Texto descriptivo de la ruta\"\n                      as=\"textarea\"\n                      onChange={this.onChangeDescription}\n                      value={this.state.description}\n                      ref={this.descriptionField}\n                      testid=\"input-descripcion\"\n                    />\n                    {this.showErrorTooltTip(\n                      this.descriptionField,\n                      this.state.invalidDescription,\n                      \"Descripción no válida\",\n                      \"right\"\n                    )}\n                  </InputGroup>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Card className=\"mb-2\">\n                <Card.Header ref={this.pointsField}>\n                  Seleccionar los hitos de la ruta\n                </Card.Header>\n                {this.showErrorTooltTip(\n                  this.pointsField,\n                  this.state.invalidPoints,\n                  \"La ruta debe tener al menos un Inicio y un Hito\",\n                  \"top\"\n                )}\n                <Card.Body>\n                  <Card.Text>\n                    Puedes utilizar el mapa de la parte inferior para\n                    seleccionar los puntos que conformarán tu ruta. También\n                    puedes hacer <b>doble click sobre un punto</b> para\n                    modificar sus datos. Utiliza los botones de la barra\n                    superior para eliminar el último marcador o eliminar todos\n                    los marcadores.\n                  </Card.Text>\n                  {this.props.showMap && (\n                    <AddRouteMap\n                      points={this.state.points}\n                      updatePoints={this.updatePoints}\n                    />\n                  )}\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                variant=\"success\"\n                style={{ padding: \"12px 48px\" }}\n                onClick={this.handleAdd}\n                testid=\"boton-agregar\"\n              >\n                {this.handleIsAdding()}\n              </Button>\n            </Col>\n          </Row>\n        </Container>\n        {this.handleRouteAdded()}\n      </div>\n    );\n  }\n\n  /**\n   * Método invocado cada vez que se modifica la lista de puntos,\n   * bien porque se haya añadido uno nuevo, se haya eliminado o\n   * se haya modificado.\n   */\n  updatePoints = (points) => {\n    this.setState({ points: points });\n  };\n\n  /**\n   * Método invocado cuando se haga click sobre el botón para agregar la ruta.\n   * Se encarga de comprobar que los datos de la ruta son correctos (número de puntos\n   * seleccionado >= 2, nombre y descripción no están vacíos...). Construye un objeto Ruta\n   * con los datos correspondientes y se lo pasa al servicio para almacenarlo en el pod del usuario loggeado.\n   */\n  handleAdd = async () => {\n    let name = this.state.name;\n    let description = this.state.description;\n    let points = this.state.points;\n    // Pre-condiciones\n    // Restablecemos las variables de control de inputs inváidos\n    this.setState({\n      invalidName: false,\n      invalidDescription: false,\n      invalidPoints: false,\n    });\n\n    if (name == null || name.length === 0) {\n      // Nombre vacío\n      this.setState({ invalidName: true });\n      this.props.handleScrollIntoView(this.nameField);\n      return;\n    }\n\n    if (description == null || description.length === 0) {\n      // Descripción vacía\n      this.setState({ invalidDescription: true });\n      this.props.handleScrollIntoView(this.descriptionField);\n      return;\n    }\n\n    if (points == null || points.length < 2) {\n      // Ruta con menos de dos puntos.\n      this.setState({ invalidPoints: true });\n      this.props.handleScrollIntoView(this.pointsField);\n      return;\n    }\n\n    // Construcción del objeto Ruta\n    let inicio = points[0];\n    let hitos = points\n      .slice(1)\n      .map((hito) => new Hito(hito.name, hito.latlng.lat, hito.latlng.lng));\n\n    let ruta = new Ruta(\n      name,\n      [inicio.latlng.lat, inicio.latlng.lng],\n      description\n    );\n    for (let i in hitos) ruta.addHito(hitos[i]);\n\n    this.setState({ isAdding: true });\n\n    if (await this.props.addRutaObject(ruta)) {\n      this.setState({\n        isAdding: false,\n        routeIsAdded: true,\n        name: \"\",\n        description: \"\",\n        points: [],\n      });\n    }\n  };\n\n  /**\n   * Renderiza el texto del botón para añadir la ruta o bien\n   * un Spinner de carga en función del estado isAdding.\n   */\n  handleIsAdding = () => {\n    if (this.state.isAdding) {\n      return (\n        <div>\n          <Spinner\n            as=\"span\"\n            role=\"status\"\n            animation=\"border\"\n            size=\"sm\"\n            className=\"mr-2\"\n          />\n          Agregando...\n        </div>\n      );\n    }\n    return \"Agregar\";\n  };\n\n  /**\n   * Renderiza si ya se ha cargado la ruta en el POD un panel\n   * modal con un mensaje indicando al usuario que su ruta ha sido\n   * añadida.\n   */\n  handleRouteAdded = () => {\n    if (this.state.routeIsAdded) {\n      return (\n        <MessageDialog\n          show={true}\n          title={\"Ruta creada\"}\n          message={\n            \"Tu nueva ruta ha sido creada correctamente, puedes ir a echarle un vistazo al listado de rutas.\"\n          }\n          handleAceptar={() => this.setState({ routeIsAdded: false })}\n        />\n      );\n    }\n    return null;\n  };\n\n  // Manejadores onChange para los inputs de nombre y descripción.\n\n  onChangeName = (e) => {\n    this.setState({ name: e.target.value });\n  };\n\n  onChangeDescription = (e) => {\n    this.setState({ description: e.target.value });\n  };\n\n  // Tooltips\n\n  /**\n   * Muestra un tooltip asociado al elemento de referencia\n   * pasada como parámetro, con el texto y posición indicados.\n   */\n  showErrorTooltTip = (ref, state, text, placement) => {\n    return (\n      <Overlay target={ref} show={state} placement={placement}>\n        {(props) => (\n          <Tooltip className=\"error-tooltip\" {...props}>\n            {text}\n          </Tooltip>\n        )}\n      </Overlay>\n    );\n  };\n}\n\nexport default AddRutaMap;\n","import React, { Component } from \"react\";\nimport AddRutaMap from \"./AddRutaMap\";\nimport RutaService from \"../../../services/rutas/RutaService\";\nimport { Jumbotron } from \"react-bootstrap\";\n\n/**\n * Componente padre que representa la vista para añadir\n * una ruta mediante un mapa.\n */\nclass AddMapView extends Component {\n  constructor(props) {\n    super(props);\n    this.rutaService = new RutaService();\n  }\n\n  state = {};\n  render() {\n    return (\n      <div>\n        <header>\n          <Jumbotron>\n            <h1 className=\"display-4\">Añadir una ruta a través de un mapa</h1>\n            <p>\n              Desde aquí podrás crear tu propia ruta personalizada, indicando\n              sus datos básicos y los hitos que la conforman.\n            </p>\n          </Jumbotron>\n        </header>\n        <AddRutaMap\n          addRutaObject={this.rutaService.addRutaObject}\n          showMap={true}\n          handleScrollIntoView={this.handleScrollIntoView}\n        />\n      </div>\n    );\n  }\n\n  /**\n   * Se encarga de aplicar el efecto smooth scroll into view\n   * al componente de referencia pasada como parámetro.\n   */\n  handleScrollIntoView = (ref) => {\n    ref.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n    });\n  };\n}\n\nexport default AddMapView;\n","import React, { Component } from \"react\";\nimport { Container, Col, Row, Card, Jumbotron } from \"react-bootstrap\";\nimport \"../../../css/card-menu.css\";\n\n/**\n * Componente que representa un menú para añadir rutas\n * de diferentes maneras.\n */\nclass AddMenu extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        <header>\n          <Jumbotron>\n            <h1>Crear una nueva ruta</h1>\n            <p>Selecciona el modo en el que deseas añadir una nueva ruta.</p>\n          </Jumbotron>\n        </header>\n\n        <Container>\n          <Row>\n            <Col role=\"menu-item\">\n              <a href=\"#/add-ruta\" data-testid=\"a-manual\">\n                <Card className=\"card-item\">\n                  <Card.Img\n                    variant=\"top\"\n                    src={process.env.PUBLIC_URL + \"/img/form-logo.png\"}\n                  />\n                  <Card.Body>\n                    <Card.Title data-testid=\"manual\">\n                      Crear manualmente\n                    </Card.Title>\n                    <Card.Text>\n                      Crea una nueva ruta introduciendo sus datos a mano a\n                      través de un formulario.\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </a>\n            </Col>\n\n            <Col role=\"menu-item\">\n              <a href=\"#/add-ruta-map\" data-testid=\"a-mapa\">\n                <Card className=\"card-item\">\n                  <Card.Img\n                    variant=\"top\"\n                    src={process.env.PUBLIC_URL + \"/img/map-logo.jpg\"}\n                  />\n                  <Card.Body>\n                    <Card.Title data-testid=\"conmapa\">\n                      Crear con un mapa\n                    </Card.Title>\n                    <Card.Text>\n                      Crea una ruta con la ayuda de un mapa interactivo sobre el\n                      que puedes ir haciendo click para ir dibujando tu ruta en\n                      el mapa.\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              </a>\n            </Col>\n            <Col role=\"menu-item\">\n              <Card className=\"card-item\">\n                <Card.Img\n                  variant=\"top\"\n                  src={process.env.PUBLIC_URL + \"/img/file-logo.jpg\"}\n                />\n                <Card.Body>\n                  <Card.Title data-testid=\"confichero\">\n                    Crear a partir de fichero\n                  </Card.Title>\n                  <Card.Text>\n                    Crea una nueva ruta importando sus datos a partir de un\n                    fichero.\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AddMenu;\n","import React, { Component } from \"react\";\nimport RutaService from \"../../../services/rutas/RutaService\"\n\nclass AddRuta extends Component {\n\n  constructor(props){\n    super(props)\n    this.rutaService= new RutaService();\n  }\n  \n\nstate ={\n  nombre:'',\n  longitudInicio: '',\n  latitudInicio: '',\n  descripcion:'',\n  nombreHito:'',\n  longitudHito:'',\n  latitudHito:'',\n  hitos: [],\n  formulario1: false,\n  formulario2:true\n};\n\n\nonChange = e=>{ \n    this.setState({\n        [e.target.name] : e.target.value\n    })  //De esta manera cogemos el nombre del input y modificamos el atributo con ese nombre.  \n}\n\nonSubmit=e=>{//Creamos ruta sin hitos.\n  \n  \n  //Modificamos los formularios:\n  this.setState(\n    {\n      formulario1:true,\n      formulario2:false\n    }\n  )\n  e.preventDefault();\n}\n\n\n\nonSubmit2=e=>{//Creamos hitos.\n  this.addHito();\n  e.preventDefault();\n\n  //Inicializamos el formulario de hito:\n  this.setState({\n    nombreHito: '',\n    longitudHito:'',\n    latitudHito:'',\n   \n  })\n}\n\n\n\naddHito = () =>{\n  //Añadimos hito string con sus datos.\n  const newHito={\n    nombre: this.state.nombreHito,\n    latitud: this.state.latitudHito,\n    longitud: this.state.longitudHito\n    \n  }\n  this.setState({\n    hitos: [...this.state.hitos, newHito]\n  })\n}\n\ncrearRuta=e=>{\n  this.setState(\n    {\n      formulario1:false,\n      formulario2:true    \n    }\n  )\n  this.rutaService.addRuta(this.state.nombre, this.state.latitudInicio, this.state.longitudInicio,this.state.descripcion,this.state.hitos);\n  this.setState({\n    nombre:'',\n    longitudInicio:'',\n    latitudInicio:'',\n    descripcion:'',\n    hitos: []\n  })\n  alert ('La ruta '+ this.state.nombre+' ha sido añadida correctamente');\n}\n\n  render() {\n    return (\n      <div className=\"addRuta\" data-testid=\"panel-ruta\" >\n        <h1 data-testid=\"titleAñadirRuta\">Añadir rutas:</h1>\n        <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n                <label data-testid=\"e-nombreRuta\">Nombre de la ruta:</label>\n                <input required data-testid=\"in-nombreRuta\" disabled={this.state.formulario1} className=\"form-control\" placeholder=\"Ruta 21\" type=\"text\" name=\"nombre\" value={this.state.nombre} onChange={this.onChange}/>\n            </div>    \n            <div className=\"form-group\">    \n                <h3 data-testid=\"titlelugarInicio\">Lugar de inicio:</h3>\n                <div className=\"form-group\">    \n                  <label data-testid=\"e-latitudRuta\">Latitud de la ruta:</label>\n                  <input required data-testid=\"in-latitudRuta\" disabled={this.state.formulario1} className=\"form-control\" placeholder=\"200\" type=\"text\" name=\"latitudInicio\" value={this.state.latitudInicio} onChange={this.onChange}/>\n                </div>\n                <div className=\"form-group\">\n                  <label data-testid=\"e-longitudRuta\">Longitud de la ruta:</label>\n                  <input required data-testid=\"in-longitudRuta\" disabled={this.state.formulario1} className=\"form-control\" placeholder=\"100\" type=\"text\" name=\"longitudInicio\" value={this.state.longitudInicio} onChange={this.onChange}/>\n                </div>\n            </div> \n            <div className=\"form-group\">\n                <label data-testid=\"e-descripcionRuta\">Descripción de la ruta:</label>\n                <textarea data-testid=\"in-descripcionRuta\" disabled={this.state.formulario1} className=\"form-control\" rows=\"3\" name=\"descripcion\" value={this.state.descripcion} onChange={this.onChange}></textarea>\n            </div> \n            <button type=\"submit\" className=\"btn btn-primary\" data-testid=\"addRouteButton\" disabled={this.state.formulario1}>Añadir ruta</button>\n        </form>\n        \n        <h2 data-testid=\"titleAñadirHito\">Añadir hitos para la ruta:</h2>\n        <form onSubmit={this.onSubmit2} disabled={this.state.formulario}>\n              <div className=\"form-group\"> \n                <label data-testid=\"e-nombreHito\">Nombre del hito:</label>\n                <input required data-testid=\"in-nombreHito\" disabled={this.state.formulario2} className=\"form-control\" placeholder=\"Hito 1\" type=\"text\" name=\"nombreHito\" value={this.state.nombreHito} onChange={this.onChange}/>\n              </div>  \n              <div className=\"form-group\">\n                <label data-testid=\"e-latitudHito\">Latitud del hito:</label>\n                <input required data-testid=\"in-latitudHito\" disabled={this.state.formulario2} className=\"form-control\" placeholder=\"300\" type=\"text\" name=\"latitudHito\" value={this.state.latitudHito} onChange={this.onChange}/>\n              </div>\n              <div className=\"form-group\">\n                <label data-testid=\"e-longitudHito\">Longitud del hito:</label>\n                <input required data-testid=\"in-longitudHito\" disabled={this.state.formulario2} className=\"form-control\" placeholder=\"200\" type=\"text\" name=\"longitudHito\" value={this.state.longitudHito} onChange={this.onChange}/>\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\" data-testid=\"addHitoButton\" disabled={this.state.formulario2}>Añadir hito</button>\n        </form>\n        <br/>\n        <button onClick={this.crearRuta} className=\"btn btn-primary\" data-testid=\"saveRouteButton\" disabled={this.state.formulario2}>Guardar ruta</button>\n      </div>\n      \n    );\n  }\n  \n\n}\n\nexport default AddRuta;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport LogInComponent from \"./front-end/components/authentication/login/Login\";\nimport RegisterContainer from \"./front-end/components/authentication/register/RegistroContainer\";\nimport Home from \"./front-end/components/Home\";\nimport VerRutas from \"./front-end/components/ruta/VerRutas/VerRutas\";\nimport Footer from \"./front-end/components/fragments/Footer\";\nimport \"leaflet/dist/leaflet.css\";\nimport NotLoggedInLayout from \"./front-end/layouts/NotLoggedInLayout/not-logged-in.layout\";\nimport PrivateLayout from \"./front-end/layouts/PrivateLayout/private.layout\";\nimport PublicLayout from \"./front-end/layouts/PublicLayout/public.layout\";\nimport Friends from \"./front-end/components/friends/Friends\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport { store } from \"react-notifications-component\";\nimport RutaService from \"./front-end/services/rutas/RutaService\";\nimport ShareView from \"./front-end/components/share/ShareView\";\nimport AddMapView from \"./front-end/components/ruta/AñadirRuta/AddMapView\";\nimport AddMenu from \"./front-end/components/ruta/AñadirRuta/AddMenu\";\nimport AddRuta from \"./front-end/components/ruta/AñadirRuta/AddRuta\";\nconst rutaService = new RutaService();\n\n/**\n * COMPONENTE PADRE APP\n * Representa el componente principal y central de la aplicación.\n * Contiene el componente Router con un Switch para gestionar el enrutamiento\n * de los componentes. Suele contener componentes Padres, los cuales a su vez contienen\n * componentes hijos, a los que se les pasa referencias a las funciones de los servicios.\n */\nclass App extends Component {\n  procesarRutas() {\n    rutaService.procesarRutasCompartidas().then((result) => {\n      for (var i = 0; i < result.length; i++) {\n        //Agregamos la notificacion de ruta compartida\n        store.addNotification({\n          title: result[0].getTitulo(),\n          message: result[0].getMensaje(),\n          type: result[0].getTipo(),\n          insert: \"top\",\n          container: \"top-right\",\n          animationIn: [\"animated\", \"fadeIn\"],\n          animationOut: [\"animated\", \"fadeOut\"],\n          dismiss: {\n            duration: 5000,\n            onScreen: true,\n          },\n        });\n      }\n    });\n  }\n  async componentDidMount() {\n    //Cada 10 segundos proceso las rutas compartidas\n    var intervalId = setInterval(this.procesarRutas, 10000);\n    this.setState({ intervalId: intervalId });\n  }\n  componentWillUnmount() {\n    // use intervalId from the state to clear the interval\n    clearInterval(this.state.intervalId);\n  }\n  render() {\n    return (\n      <div data-testid=\"aplicacion\">\n        <Router>\n          <div>\n            <ReactNotification />\n            <Switch>\n              <PublicLayout exact path=\"/\" component={Home} />\n              <PrivateLayout\n                exact\n                path=\"/ver-rutas\"\n                component={VerRutas}\n              ></PrivateLayout>\n              <PrivateLayout exact path=\"/add-menu\" component={AddMenu} />\n              <PrivateLayout exact path=\"/friends\" component={Friends} />\n              <PrivateLayout exact path=\"/shared\" component={ShareView} />\n              <PrivateLayout exact path=\"/add-ruta\" component={AddRuta} />\n              <PrivateLayout\n                exact\n                path=\"/add-ruta-map\"\n                component={AddMapView}\n              />\n\n              <NotLoggedInLayout\n                exact\n                path=\"/login\"\n                component={LogInComponent}\n              />\n              <NotLoggedInLayout\n                exact\n                path=\"/signup\"\n                component={RegisterContainer}\n              />\n            </Switch>\n          </div>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// React Bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}